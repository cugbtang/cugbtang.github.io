<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concurrent on ✌yesplease's blog</title><link>http://cugbtang.github.io/tags/concurrent/</link><description>Recent content in Concurrent on ✌yesplease's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 05 Jan 2024 16:01:23 +0800</lastBuildDate><atom:link href="http://cugbtang.github.io/tags/concurrent/index.xml" rel="self" type="application/rss+xml"/><item><title>Go concurrent, how to play?</title><link>http://cugbtang.github.io/post/go/series-go-9/</link><pubDate>Fri, 05 Jan 2024 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go/series-go-9/</guid><description>introduction 首先，让我们来理解一下 goroutine。Goroutine 是一种轻量级的线程，由 Go 运行时环境管理。在 Go 语言中，你可以通过关键字 go 来启动一</description></item><item><title>Go function option vs builder, how to play?</title><link>http://cugbtang.github.io/post/go/series-go-12/</link><pubDate>Fri, 05 Jan 2024 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go/series-go-12/</guid><description>Go 构建对象模式 Function Option 是一种通过函数选项来配置函数参数的方式。通过在函数中定义多个接受选项参数的函数，可以根据需要选择性地传递这些选项，而不是像</description></item></channel></rss>