<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>micro on ✌yesplease's blog</title><link>http://cugbtang.github.io/tags/micro/</link><description>Recent content in micro on ✌yesplease's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 30 Nov 2023 15:44:23 +0800</lastBuildDate><atom:link href="http://cugbtang.github.io/tags/micro/index.xml" rel="self" type="application/rss+xml"/><item><title>micro, how to play quick?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-5/</link><pubDate>Thu, 30 Nov 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-5/</guid><description>工程化 简单模板： gin-vue-admin 自定义： nunu+vue3+el 微服务： IDL（声明+代码+文档+错误）,kratos 统一服务端回复信息格式 micro: http+json 1 2 3 4 5 6 7 func (e *Helloworld) Call(ctx context.Context, req *pb.CallRequest, rsp *pb.CallResponse)</description></item><item><title>Go-micro, how to play advance?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-3/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-3/</guid><description>疑问 服务发现，一个服务注册到consul/etcd，客户端怎么感知到 利用注册中心的订阅能力。客户端使用 Subscribe 方法来订阅服务更新的事件。该方法接收</description></item><item><title>Go-micro, how to play cli?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-2/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-2/</guid><description>Go-micro 简介 一句话介绍 Go Micro CLI is the command line interface for developing Go Micro projects. 开始表演 安装 1 go install github.com/go-micro/cli/cmd/go-micro@latest 创建测试项目（执行命令，后续根据命令提示操作） 1 go-micro new service helloworld 创建工程化项目（执行命</description></item><item><title>Go-micro, how to play engineering?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-4/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-4/</guid><description>工程化 1、尽可能的附属到IDL 2、IDL统一仓库管理 统一服务端回复信息格式 - rpc的正确返回，状态码是200，附加正确的数据信息 - rpc的错</description></item><item><title>Go-micro, how to play introduction?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-1/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-1/</guid><description>Go-micro 简介 一句话介绍 Go Micro is a framework for distributed systems development. 多说两句 Go Micro provides the core requirements for distributed systems development including RPC and Event driven communication. The Go Micro philosophy is sane defaults with a pluggable architecture. We provide defaults to get you started quickly but everything can be easily swapped out. 介绍下具体功能</description></item></channel></rss>