<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on ✌yesplease's blog</title><link>http://cugbtang.github.io/categories/kubernetes/</link><description>Recent content in Kubernetes on ✌yesplease's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Mar 2024 15:28:23 +0800</lastBuildDate><atom:link href="http://cugbtang.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>etcd authentication, how to deploy?</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-11/</link><pubDate>Thu, 28 Mar 2024 15:28:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-11/</guid><description>一、加载启动参数 1. 配置文件（Configuration file） 如果您提供了一个配置文件，那么配置文件中的设置将具有最高优先级。这意味着配置</description></item><item><title>flannel vxlan, check sum</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-7/</link><pubDate>Wed, 07 Dec 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-7/</guid><description>集群内pod无法dig mysql.middleware 修改主机dns nameserver为集群core dns地址，主机上可以dig mysql.middleware 一、问题分析 从pod内发出的请求数据包</description></item><item><title>kubeadm startup Kubernetes less than v1.20.0 (centos+docker+ipvs+calico)</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-2/</link><pubDate>Sun, 15 May 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-2/</guid><description>一、更新系统软件（全部节点） 由于 Docker 对系统内核有一定的要求，所以我们最好使用 yum 来更新系统软件及其内核。 1 2 3 4 5 6 7 8 9 10 11 #备份本地 yum 源 $ mv</description></item><item><title>Kubernetes, how to deploy?</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-1/</link><pubDate>Sun, 01 May 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-1/</guid><description>汇总kubernetes部署的方案： kubernetes &amp;lt; 1.20 + centos7 + docker + iptables + flannel kubernetes &amp;lt; 1.20 + centos7 + docker + ipvs + calico 1.20 &amp;lt;kubernetes &amp;lt; 1.24 + centos7 + docker + ipvs + calico kubernetes &amp;gt; 1.24 + centos7 + containerd + ipvs + calico kubernetes &amp;gt; 1.24 + centos7 + cri-o</description></item><item><title>The node was low on resource: ephemeral-storage. Evicted</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-6/</link><pubDate>Fri, 15 Apr 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-6/</guid><description>The node was low on resource: ephemeral-storage. Evicted 最近某个节点频繁出现这个问题 问题分析 解决方案 查询到的解决方案 不能让某个占用过多的资源，临时存储不允许一直占用，用超过Limi</description></item><item><title>kubernetes1.24.0, Why use docker in production environment ?</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-4/</link><pubDate>Tue, 15 Mar 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-4/</guid><description>kubernetes1.24.0, Why use docker in production environment ? if you consider Mirantis and Docker have committed to maintaining a replacement adapter for Docker Engine, and to maintain that adapter even after the in-tree dockershim is removed from Kubernetes. The replacement adapter is named cri-dockerd.
Download the cri-dockerd binary package or compile the source code yourself
1 2 3 4 5 6 # download file wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz # unzip file tar -xvf cri-dockerd-v0.</description></item><item><title>kubeadm startup Kubernetes more than v1.20.0 (centos7+containerd+ipvs+calico)</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-3/</link><pubDate>Tue, 01 Mar 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-3/</guid><description>这篇文章的作者部署的是kubernetes v1.23，但其实是基于kubernetes对CRI的改动执行的较为流行的方案。 我绝的主要是针对D</description></item></channel></rss>