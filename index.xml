<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>✌yesplease's blog</title><link>http://cugbtang.github.io/</link><description>Recent content on ✌yesplease's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 02 Dec 2023 16:01:23 +0800</lastBuildDate><atom:link href="http://cugbtang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>http://cugbtang.github.io/about/</link><pubDate>Sat, 01 Jan 2022 21:38:52 +0800</pubDate><guid>http://cugbtang.github.io/about/</guid><description>&lt;p>A new generation of migrant workers that peek technology in cloudnative!&lt;/p></description></item><item><title>docker, net?</title><link>http://cugbtang.github.io/post/container/series-container-3/</link><pubDate>Sat, 02 Dec 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/container/series-container-3/</guid><description>&lt;h2 id="docker-默认的网络设备">docker 默认的网络设备&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 列出不同的网络设备&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker network ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 专门查看网桥设备&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brctl show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="如果你的docker主机可以访问互联网你会发现容器创建后默认也可以访问互联网-why">如果你的docker主机可以访问互联网，你会发现，容器创建后，默认也可以访问互联网, why?&lt;/h2>
&lt;p>docker会借助iptables，对docker0的IP段进行SNAT&lt;/p>
&lt;p>&lt;img src="image-3.png" alt="Alt text">&lt;/p>
&lt;h2 id="容器获取的ip是动态的先来后到先到先得容器与ip并没有绑定死">容器获取的IP是动态的，先来后到，先到先得，容器与IP并没有绑定死&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">docker inspect test2 &lt;span class="p">|&lt;/span> jq &lt;span class="s1">&amp;#39;.[].NetworkSettings.Networks.bridge.IPAddress&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="如果想要让容器使用指定的ip地址该怎么办呢">如果想要让容器使用指定的IP地址，该怎么办呢？&lt;/h2>
&lt;blockquote>
&lt;p>默认情况下，我们无法对容器指定固定的IP地址，除非我们自己创建一个新的虚拟交换机，当容器使用我们自己创建的交换机和对应的网段时，才支持对容器指定固定的IP地址。也就是说，当容器连接到默认的网络时，不支持对容器指定固定的IP地址，只有连接到自定义网络时，才能对容器指定固定的IP地址。&lt;/p>
&lt;/blockquote>
&lt;h2 id="自定义网桥">自定义网桥&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">docker network create test_net -d bridge -o com.docker.network.bridge.name&lt;span class="o">=&lt;/span>test_bridge --subnet &lt;span class="s2">&amp;#34;172.18.0.0/16&amp;#34;&lt;/span> --gateway &lt;span class="s2">&amp;#34;172.18.0.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#查看主机上的网桥变化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brctl show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#查看主机上路由的变化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip route show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 或&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">route -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="默认的bridge网络和test_net网络是不通的">默认的bridge网络和test_net网络是不通的&lt;/h2>
&lt;blockquote>
&lt;p>查看路由表，路由条目写的都很清楚，不同的网段对应不通的接口，应该可以正常通讯才对，为什么就是无法ping通呢？
原因就是，docker会生成对应的iptables规则，阻断了默认网络和自定义桥网络之间的通讯。&lt;/p>
&lt;/blockquote>
&lt;p>删除STAGE-2中的前两条规则，即可让docker0中的容器和test_bridge中的容器进行通讯了&lt;/p>
&lt;p>&lt;img src="image-4.png" alt="Alt text">&lt;/p>
&lt;p>但是，如果先将filter表中STAGE-2链中的规则删除，确保docker0和test_bridge能够互相通讯的情况下，会发现，即使是docker0和test_bridge之间的通讯，也是会被SNAT的（从docker0去往test_bridge，被SNAT成172.18.0.1，从test_bridge去往docker0，被SNAT成172.17.0.1），这是因为它们之间的通讯也是符合nat表中的两条SNAT规则的。造成这种情况的原因是，这两条SNAT规则没有指定固定的宿主机出口网卡（即没有使用-o指定宿主机网卡，而是使用！-o的方式把自己所在的网络内的网口排除在外）
&lt;img src="image-5.png" alt="Alt text">&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.zsythink.net/archives/4409">docker(7): 网络初探&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.51cto.com/u_16099349/6896881">Docker与iptables docker与iptables详解&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>docker桥接网络模式下开启端口映射，流量是如何绕过防火墙的</title><link>http://cugbtang.github.io/post/container/series-container-2/</link><pubDate>Fri, 01 Dec 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/container/series-container-2/</guid><description>&lt;h2 id="一iptables">一、iptables&lt;/h2>
&lt;p>&lt;img src="image.png" alt="Alt text">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>五条链&lt;/p>
&lt;ul>
&lt;li>PREROUTING链
PREROUTING链是最先生效的，当数据包到达网口时，即开始工作。同时由于其在raw,mangle,nat表中都存在，其执行的优先l顺序是：raw(PREROUTING)&amp;ndash;&amp;gt;man
gle(PREROUTING)&amp;mdash;-&amp;gt;mangle(nat)
PREROUTING一般用作对包进行目标地址修改。比如将该包的目标地址，修改为非本机的另外的网络p,一般通过DNAT规则进行修改。&lt;/li>
&lt;li>路由决策(Routing Decision)
决定一个包该走哪个链。如果上述PREROUTING链对包进行了目标网络更改。那么决策会觉得这个是一个需要转发的数据包，于是会将该包转发给FORWARD链。
否则，该包会走NPUT链&lt;/li>
&lt;li>FORWARD链
FORWARD在各表中生效的优先l顺序是：mangle(FORWARD)&amp;ndash;&amp;gt;filter(FORWARD)
处理路由决策派发发过来的包，到这里的包一般目标网络地址在PREROUTING链被修改过&lt;/li>
&lt;li>INPUT链
其生效顺序是：mangle(INPUT)&amp;ndash;&amp;gt;filter(INPUT)
处理路由决策派发发过来的包，到这里的包一般目标网络地址在PREROUTING链没有被修改过。&lt;/li>
&lt;li>OUTPUT链
在目标进程端口接收到输入数据包后，输出的数据包，将在这里进行规则应用。OUTPUT链在各表中生效的先后顺序是：
raw(OUTPUT)&amp;mdash;-&amp;gt;mangle(OUTPUT)&amp;mdash;-nat(OUTPUT)&amp;mdash;-&amp;gt;filter(OUTPUT)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>四张表&lt;/p>
&lt;ul>
&lt;li>tr:这里面的链条，规则，可以决定一个数据包是否可以到达目标进程端口&lt;/li>
&lt;li>mangle:这里面的链条，规则，可以修改数据包的内容，比如t!&lt;/li>
&lt;li>nat:这里面的链条，规测，可以修改源和目标的ip地址，从而进行包路由。&lt;/li>
&lt;li>raw:这里面的链条，规则，能基于数据包的状态进行规则设定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>规则
一个规则一般分为两大部分：&lt;/p>
&lt;ul>
&lt;li>匹配：即哪些数据包会命中这个规则，比如一个指定的，即是一个匹配规则&lt;/li>
&lt;li>动作：匹配到规则之后，需要做什么动作，是放行，还是拒绝&lt;/li>
&lt;/ul>
&lt;p>动作分为以下几种：&lt;/p>
&lt;ul>
&lt;li>ACCEPT:直接接受该数据包，不会再走其他链条和规则。比如fit©r中的iput表中的某个规则命中后，动作是ACCEPT,那么该数据包将被直接送达目标进程端口。&lt;/li>
&lt;li>DROP:直接抛弃该数据包，并且没有任何返回。且不会再走其他链和规则&lt;/li>
&lt;li>REJECT:跟DROP类似，但好歹还是会跟请求方返回一些拒绝信息，比如我们拒绝掉ICMP协议后，ping该主机，会返▣“destination host unreachable”&lt;/li>
&lt;li>RETURN:当前规则不做任何理，返回。让给下一个规则处理&lt;/li>
&lt;li>LOG:同RETURN类以，但只是会将请求信息记录到系统日志中，记录路径为：var/log/syslog or /var/log/.messages&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="11查看某个表中有哪些链和规则">1.1、查看某个表中有哪些链和规则&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">iptables -t nat -nvL --line-numbers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="二查看docker网桥模式下端口映射的规则变化">二、查看docker网桥模式下，端口映射的规则变化&lt;/h2>
&lt;ul>
&lt;li>启动一个端口映射的容器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> docker run --detach -p 8888:3306 --name some-mariadb1 --env &lt;span class="nv">MARIADB_USER&lt;/span>&lt;span class="o">=&lt;/span>example-user --env &lt;span class="nv">MARIADB_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>m@^x8bb6&lt;span class="nv">$d13ixuk&lt;/span> --env &lt;span class="nv">MARIADB_ROOT_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>m@^x8bb6&lt;span class="nv">$d13ixuk&lt;/span> mariadb:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>查看nat表&lt;/p>
&lt;p>&lt;img src="image-1.png" alt="Alt text">&lt;/p>
&lt;ul>
&lt;li>访问192.168.1.2:8888&lt;/li>
&lt;li>数据包首先被nat表中的PREROUTING链命中&lt;/li>
&lt;li>转向DOCKER链&lt;/li>
&lt;li>被第2条规则命中，做了DNAT动作，访问变成了172.170.2:3306&lt;/li>
&lt;li>经过路由处理，转向FORWARD链&lt;/li>
&lt;li>命中FORWARD链中的第4条规则，最终访问被响应，也就可以从外部访问端口映射的服务了&lt;/li>
&lt;li>由于PREROUTING对包进行了目标地址的修改，于是路由决策会将该包路由到FORWARD链。所有表中的linput链将直接忽略。
&lt;img src="image-2.png" alt="Alt text">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="21原因及解决方案">2.1、原因及解决方案&lt;/h3>
&lt;ul>
&lt;li>原因
由于数据包被更改了目标地址，于是路由策略将该包导向了FORWARD链。所以我们在INPUT链中再怎么定义规则，都无法限制外网对docker服务的访问。&lt;/li>
&lt;li>解决方案
既然包导向了FORWARD链，那么可以在FORWARD链中拦截。DOCKER官方给的建议便是如此，比如，针对本文中的例子，我们可以添加如下规则，即可实现所有外部网络都无法访问docker中的服务：
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">iptables -I DOCKER-USER -i eth0 -j DROP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>DOCKER-USER是FORWARD链中第一个规则命中的链&lt;/li>
&lt;li>从外部网络进入的数据包，直接丢弃&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>micro, how to play quick?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-5/</link><pubDate>Thu, 30 Nov 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-5/</guid><description>&lt;h1 id="工程化">工程化&lt;/h1>
&lt;ul>
&lt;li>简单模板：
gin-vue-admin&lt;/li>
&lt;li>自定义：
nunu+vue3+el&lt;/li>
&lt;li>微服务：
IDL（声明+代码+文档+错误）,kratos&lt;/li>
&lt;/ul>
&lt;h2 id="统一服务端回复信息格式">统一服务端回复信息格式&lt;/h2>
&lt;ul>
&lt;li>micro: http+json&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Helloworld&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CallRequest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rsp&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CallResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Infof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received Helloworld.Call request: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">rsp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Msg&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">errors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;aaa&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">rsp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CallRequest&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>grpc: http2+protobuf&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// SayHello implements helloworld.GreeterServer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloReply&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received: %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">in&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetName&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloReply&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">in&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetName&lt;/span>&lt;span class="p">()},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewGreeterClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">conn&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SayHello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">pb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HelloRequest&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>kratos: 感觉是go-micro的最佳实践
Errors：通过 Protobuf 的 Enum 作为错误码定义，以及工具生成判定接口；
Metadata：在协议通信 HTTP/gRPC 中，通过 Middleware 规范化服务元信息传递；
Encoding：支持 Accept 和 Content-Type 进行自动选择内容编码；&lt;/p></description></item><item><title>micro, how to play api?</title><link>http://cugbtang.github.io/post/engineer/series-api-2/</link><pubDate>Wed, 29 Nov 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/engineer/series-api-2/</guid><description>&lt;h1 id="api工程化基于proto的idl管理和文档生成">API工程化：基于Proto的IDL管理和文档生成&lt;/h1>
&lt;p>在现代软件开发中，API工程化变得愈发重要。使用Proto作为接口定义语言（IDL），可以帮助团队更好地管理API和生成相关文档。本文将介绍一种基于Proto的IDL管理方式以及如何生成API文档。&lt;/p>
&lt;h2 id="proto的管理方式">Proto的管理方式&lt;/h2>
&lt;p>在管理Proto文件时，可以采用多种方式，包括代码仓库、独立仓库、集中仓库和镜像仓库。其中，集中仓库的方式被提倡，有以下优点：&lt;/p>
&lt;ul>
&lt;li>方便跨部门协作：将所有Proto文件放在同一个仓库中，可以方便不同团队之间的协作。&lt;/li>
&lt;li>版本管理：使用git对Proto文件进行版本控制，确保修改和变更可追溯。&lt;/li>
&lt;li>规范化检查：使用API lint工具对Proto文件进行规范化检查，确保符合规范和最佳实践。&lt;/li>
&lt;li>API设计评审：通过提交变更的diff，进行API设计评审，提高代码质量和设计性能。&lt;/li>
&lt;li>权限管理：通过设定目录的OWNERS文件，对不同团队或个人设置读写权限，保护API的安全性。&lt;/li>
&lt;/ul>
&lt;p>另外，可以使用Proto的git submodule方式，将Proto文件作为仓库的子模块进行管理。这种方式可以实现以下功能：&lt;/p>
&lt;ul>
&lt;li>将Proto文件作为代码仓库的一部分，保持其作为源数据的唯一性。&lt;/li>
&lt;li>使用本地构建工具protoc依赖go module下的相对路径，方便在不同项目中引用Proto文件。&lt;/li>
&lt;li>基于分支创建新的Proto文件，通过切换子模块分支生成相关代码，确保各个版本之间的兼容性。&lt;/li>
&lt;li>维护Makefile来处理Proto文件的编译和构建工作，统一化处理流程。&lt;/li>
&lt;li>使用声明式依赖方式，在yaml文件中指定protoc版本和Proto文件的依赖关系。&lt;/li>
&lt;/ul>
&lt;h2 id="idl项目结构">IDL项目结构&lt;/h2>
&lt;p>良好的IDL项目结构能够提高团队协作和代码维护的效率。建议将目录结构和package对齐，以便更好地组织和管理Proto文件以及生成的代码。&lt;/p>
&lt;p>典型的IDL项目结构如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">├── api/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── user/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── user.proto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── order/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── order.proto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── common/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── common.proto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── pkg/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── user/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── user.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── order/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── order.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── common/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── common.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这个结构中，&lt;code>api/&lt;/code>目录存放所有的Proto文件，按照业务功能划分为子目录。&lt;code>pkg/&lt;/code>目录存放生成的代码，与&lt;code>api/&lt;/code>目录一一对应。通过这种结构，可以清晰地区分Proto文件和生成的代码，便于团队进行开发和维护。&lt;/p>
&lt;h2 id="idl错误处理">IDL错误处理&lt;/h2>
&lt;p>在编写API时，处理错误是非常重要的一部分。为了使不同的API、协议和错误上下文之间保持一致的体验，建议使用简单的协议无关错误模型。具体做法包括：&lt;/p>
&lt;ul>
&lt;li>使用一小组标准错误，覆盖大量资源。&lt;/li>
&lt;li>合理传播错误：如果你的API服务依赖其他服务，不应该盲目地将这些服务的错误传播给客户端。推荐的做法包括：
&lt;ul>
&lt;li>隐藏实现详细信息和机密信息，避免暴露敏感数据。&lt;/li>
&lt;li>根据错误责任方调整错误处理，对于感兴趣的翻译错误提供有意义的信息，对于不感兴趣的错误提供通用的&amp;quot;Unknown&amp;quot;错误提示。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>通过以上方式，可以统一错误处理的规范，并提供更好的错误信息给客户端，提高用户体验和调试效率。&lt;/p>
&lt;h2 id="idl文档生成">IDL文档生成&lt;/h2>
&lt;p>为了方便使用和理解API，生成API文档是必不可少的。可以使用基于OpenAPI插件和Proto注释的方式生成文档，具体步骤如下：&lt;/p>
&lt;ul>
&lt;li>在Proto文件中添加注释，描述每个接口的用途、参数和返回值等信息。&lt;/li>
&lt;li>使用OpenAPI插件，解析Proto文件和注释，生成OpenAPI规范的yaml文件。&lt;/li>
&lt;li>在项目的Makefile中添加生成API文档的脚本，执行&lt;code>make api&lt;/code>命令即可生成对应的OpenAPI文档。&lt;/li>
&lt;li>可以通过GitLab或VS Code插件直接查看和编辑生成的OpenAPI文档，方便团队进行微服务治理、调试和测试等工作。&lt;/li>
&lt;/ul>
&lt;p>通过以上方式，团队可以轻松生成和维护API文档，提高开发效率和团队协作能力。&lt;/p>
&lt;p>本文介绍了基于Proto的IDL管理和文档生成的方法，包括Proto的管理方式、IDL项目结构、错误处理和文档生成等内容。通过合理规划和使用这些方法，可以提高API工程化水平，推动团队的协作和开发效率。&lt;/p>
&lt;p>总结：&lt;/p>
&lt;p>在API工程化中，Proto的管理方式、IDL项目结构、错误处理和文档生成是非常重要的一部分。通过集中管理Proto文件、规范项目结构、统一错误处理和生成易于理解的API文档，可以提高团队的开发效率和 API的质量。同时，不断优化和改进这些方法，可以实现持续集成和交付，适应快速迭代的开发环境。希望本文对您有所启发，让您的API工程化之路更加顺利！&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV17m4y1f7qc/?spm_id_from=333.880.my_history.page.click&amp;amp;vd_source=9573f6b9b39a65fed99157eefcfdfb74">API工程化分享 - 毛剑&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-kratos/kratos">https://github.com/go-kratos/kratos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto#L112">https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto#L112&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pkg/errors">https://github.com/pkg/errors&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/cBXZjg_R8MLFDJyFtpjVVQ">https://mp.weixin.qq.com/s/cBXZjg_R8MLFDJyFtpjVVQ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>micro, how to play engineer?</title><link>http://cugbtang.github.io/post/engineer/series-api-0/</link><pubDate>Wed, 29 Nov 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/engineer/series-api-0/</guid><description>&lt;h2 id="grpc管理">grpc管理&lt;/h2>
&lt;ul>
&lt;li>api管理&lt;/li>
&lt;li>api生命周期管理&lt;/li>
&lt;li>南北流量如何slb、cdn打通&lt;/li>
&lt;li>东西流量内网鉴权、api上下线、api兼容性测试&lt;/li>
&lt;li>微服务治理框架（实际就是管控面）&lt;/li>
&lt;/ul>
&lt;h2 id="治理什么">治理什么：&lt;/h2>
&lt;p>1、发现和负载
2、限流和熔断
3、观测
4、东西向内部鉴权&lt;/p></description></item><item><title>micro, how to play select engineer mode?</title><link>http://cugbtang.github.io/post/engineer/series-api-1/</link><pubDate>Wed, 29 Nov 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/engineer/series-api-1/</guid><description>&lt;h2 id="mvc-vs-ddd">MVC vs DDD&lt;/h2>
&lt;ul>
&lt;li>MVC&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>在MVC架构中，控制器负责决定流量的传递路径，从用户请求开始，通过控制器、模型和视图之间的协作，最终将结果返回给用户。控制器作为中心协调器，负责控制整个流程的顺序和逻辑。&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>1、控制器（Controller）接收到前端发送的HTTP请求。控制器主要负责解析请求参数、验证输入，并将请求转发给相应的服务。
2、模型（Model）是应用程序中的核心部分，它包含业务逻辑和数据。控制器将请求传递给模型，并调用相应的方法来执行业务逻辑。模型可以从数据访问层获取数据，对数据进行验证和处理，并返回结果给控制器。
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>DDD&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>DDD强调以业务为核心，通过将业务逻辑封装在领域模型中，并在不同层之间使用明确的边界和接口进行交互，以实现更好的可维护性和可扩展性&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>1、应用服务层（Application Service）：应用服务层类似于服务层[多个DO]，在这里处理外部请求并协调领域对象的操作。它负责将请求转发给相应的应用领域服务，并处理领域对象之间的协作和交互。
2、领域层（Domain Layer）：领域层是业务逻辑的核心，类似于业务逻辑层[一个DO,多个data接口]。它包含领域模型（Domain Model）和领域服务（Domain Service）。领域模型是用于解决特定领域问题的对象模型，其中包括实体（Entity）、值对象（Value Object）、聚合根（Aggregate Root）等概念。领域服务是没有状态的操作，用于完成跨实体或聚合根的操作。
3、基础设施层（Infrastructure Layer）：基础设施层类似于数据访问层（data）[现实一个data接口]，它负责与外部系统进行交互，包括数据库、缓存、消息队列等。基础设施层提供对这些外部系统的访问封装，并为领域层提供必要的技术支持。
4、应用领域服务（Application Domain Service）：应用领域服务是应用服务层和领域层之间的接口，负责协调应用服务和领域模型之间的交互。它将请求从应用服务层传递给领域模型，并根据需要执行一些额外的业务操作。
&lt;/code>&lt;/pre>
&lt;p>请求处理流程： 请求从应用服务层进入，经过应用领域服务的处理后传递给领域层，领域层根据领域模型和领域服务进行业务逻辑的处理，可能涉及到领域对象之间的交互和数据的访问。最终，结果通过应用领域服务返回给应用服务层，然后返回给客户端。&lt;/p></description></item><item><title>Go-micro, how to play advance?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-3/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-3/</guid><description>&lt;h1 id="疑问">疑问&lt;/h1>
&lt;h2 id="服务发现一个服务注册到consuletcd客户端怎么感知到">服务发现，一个服务注册到consul/etcd，客户端怎么感知到&lt;/h2>
&lt;p>利用注册中心的订阅能力。客户端使用 Subscribe 方法来订阅服务更新的事件。该方法接收三个参数：服务名称、事件处理函数和可选的过滤器选项。当有新的服务注册或者已注册的服务发生变化时，事件处理函数将被调用。&lt;/p>
&lt;h2 id="注册中心一个服务不可用了consul默认是怎么感知的">注册中心，一个服务不可用了，consul默认是怎么感知的&lt;/h2>
&lt;p>Consul 提供了多种类型的健康检查，包括 HTTP、TCP、gRPC、Script 等。
默认，Consul Agent 在每次进行健康检测时，会向服务实例发送一个 HTTP GET 请求，并等待该请求的响应。如果在 1 秒内没有收到响应，该次检测将被视为超时。Consul Agent 将尝试最多 3 次健康检测，如果在这些检测中有任何一次超时或者返回的状态码不符合健康条件，那么该服务实例将被标记为不健康状态。&lt;/p>
&lt;h2 id="客户端当有多个微服务可用时客户端的负载均衡是怎么做的">客户端，当有多个微服务可用时，客户端的负载均衡是怎么做的&lt;/h2>
&lt;p>默认的负载均衡策略是轮询（Round-Robin）。go-micro v4 提供了多种负载均衡策略供选择，包括 Round-Robin、Random、LeastConnection 和 Weighted 等。&lt;/p>
&lt;h2 id="如果不想使用服务发现就想已ipport的方式启动该怎么办">如果不想使用服务发现，就想已ip+port的方式启动，该怎么办?&lt;/h2>
&lt;p>Go Micro CLI is the command line interface for developing Go Micro projects.&lt;/p>
&lt;h2 id="如果我想自定义错误返回该怎么办">如果我想自定义错误返回，该怎么办？&lt;/h2>
&lt;h2 id="插件化原理">插件化原理&lt;/h2>
&lt;p>强定义的接口&lt;/p>
&lt;h2 id="扩展性">扩展性&lt;/h2>
&lt;p>基于Wrapper（中间件）&lt;/p></description></item><item><title>Go-micro, how to play cli?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-2/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-2/</guid><description>&lt;h1 id="go-micro-简介">Go-micro 简介&lt;/h1>
&lt;h2 id="一句话介绍">一句话介绍&lt;/h2>
&lt;p>Go Micro CLI is the command line interface for developing Go Micro projects.&lt;/p>
&lt;h2 id="开始表演">开始表演&lt;/h2>
&lt;ul>
&lt;li>安装&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go install github.com/go-micro/cli/cmd/go-micro@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>创建测试项目（执行命令，后续根据命令提示操作）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go-micro new service helloworld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>创建工程化项目（执行命令，后续根据命令提示操作）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go-micro new service --jaeger --health --grpc --advanced
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注：
1、 Since Kubernetes 1.24, probes can make use of the gRPC Health Protocol. This allows you to directly probe the go-micro service in a Kubernetes container if it implements the health protocol.
2、By default, go-micro uses an JSON/HTTP RPC server. Many microservice use cases require a gRPC server or client, therefore, go-micro offers a gRPC server built in. gRPC默认使用HTTP/2作为其传输协议，并使用Protocol Buffers（protobuf）作为默认的消息序列化和接口定义语言&lt;/p>
&lt;ul>
&lt;li>
&lt;p>添加工程化插件
1、consul 配置和服务发现中心&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地测试接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>测试非流&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go-micro call helloworld Helloworld.Call &lt;span class="s1">&amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;John&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;Hello John&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试单流&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go-micro stream server helloworld Helloworld.ServerStream &lt;span class="s1">&amp;#39;{&amp;#34;count&amp;#34;: 10}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:0&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:1&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:2&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:3&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:4&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:5&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:6&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:7&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:8&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>:9&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试双向流&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go-micro stream bidi helloworld Helloworld.BidiStream &lt;span class="s1">&amp;#39;{&amp;#34;stroke&amp;#34;: 1}&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;{&amp;#34;stroke&amp;#34;: 2}&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;{&amp;#34;stroke&amp;#34;: 3}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;stroke&amp;#34;&lt;/span>:1&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;stroke&amp;#34;&lt;/span>:2&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;stroke&amp;#34;&lt;/span>:3&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者 curl&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">curl -XPOST &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -H &lt;span class="s1">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -H &lt;span class="s1">&amp;#39;Micro-Endpoint: Helloworld.Call&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;alice&amp;#34;}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> http://localhost:8080
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="探索">探索&lt;/h2>
&lt;ul>
&lt;li>阅读 examples&lt;/li>
&lt;li>尝试 plugins&lt;/li>
&lt;/ul></description></item><item><title>Go-micro, how to play engineering?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-4/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-4/</guid><description>&lt;h1 id="工程化">工程化&lt;/h1>
&lt;p>1、尽可能的附属到IDL
2、IDL统一仓库管理&lt;/p>
&lt;h2 id="统一服务端回复信息格式">统一服务端回复信息格式&lt;/h2>
&lt;pre>&lt;code>- rpc的正确返回，状态码是200，附加正确的数据信息
- rpc的错误返回（1），状态码希望复用grpc的，外加对应的错误描述
- rpc的错误返回（2），状态码是200，附加自定义proto格式的错误模型（IDL定义模型）
&lt;/code>&lt;/pre>
&lt;h2 id="使用中间件withxxxhandlerwrapxxxhandler">使用中间件，withXxxHandler/wrapXxxHandler&lt;/h2>
&lt;pre>&lt;code>- 自带的log不行
- 缺少metric
- 微服务间的鉴权
- 缺少限流和熔断
- 使用中间件，withXxxHandler/wrapXxxHandler
&lt;/code>&lt;/pre>
&lt;h2 id="api管理">API管理&lt;/h2>
&lt;pre>&lt;code>- IDL，即声明=代码=文档
- 原信息，用于服务治理
&lt;/code>&lt;/pre></description></item><item><title>Go-micro, how to play introduction?</title><link>http://cugbtang.github.io/post/go-micro/series-go-micro-1/</link><pubDate>Fri, 15 Sep 2023 15:44:23 +0800</pubDate><guid>http://cugbtang.github.io/post/go-micro/series-go-micro-1/</guid><description>&lt;h1 id="go-micro-简介">Go-micro 简介&lt;/h1>
&lt;h2 id="一句话介绍">一句话介绍&lt;/h2>
&lt;p>Go Micro is a framework for distributed systems development.&lt;/p>
&lt;h2 id="多说两句">多说两句&lt;/h2>
&lt;p>Go Micro provides the core requirements for distributed systems development including RPC and Event driven communication.
The Go Micro philosophy is sane defaults with a pluggable architecture. We provide defaults to get you started quickly but everything can be easily swapped out.&lt;/p>
&lt;h2 id="介绍下具体功能">介绍下具体功能&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Authentication - Auth is built in as a first class citizen. Authentication and authorization enable secure zero trust networking by providing every service an identity and certificates. This additionally includes rule based access control.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dynamic Config - Load and hot reload dynamic config from anywhere. The config interface provides a way to load application level config from any source such as env vars, file, etcd. You can merge the sources and even define fallbacks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ata Storage - A simple data store interface to read, write and delete records. It includes support for memory, file and CockroachDB by default. State and persistence becomes a core requirement beyond prototyping and Micro looks to build that into the framework.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Service Discovery - Automatic service registration and name resolution. Service discovery is at the core of micro service development. When service A needs to speak to service B it needs the location of that service. The default discovery mechanism is multicast DNS (mdns), a zeroconf system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Load Balancing - Client side load balancing built on service discovery. Once we have the addresses of any number of instances of a service we now need a way to decide which node to route to. We use random hashed load balancing to provide even distribution across the services and retry a different node if there&amp;rsquo;s a problem.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Message Encoding - Dynamic message encoding based on content-type. The client and server will use codecs along with content-type to seamlessly encode and decode Go types for you. Any variety of messages could be encoded and sent from different clients. The client and server handle this by default. This includes protobuf and json by default.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RPC Client/Server - RPC based request/response with support for bidirectional streaming. We provide an abstraction for synchronous communication. A request made to a service will be automatically resolved, load balanced, dialled and streamed.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Async Messaging - PubSub is built in as a first class citizen for asynchronous communication and event driven architectures. Event notifications are a core pattern in micro service development. The default messaging system is a HTTP event message broker.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Event Streaming - PubSub is great for async notifications but for more advanced use cases event streaming is preferred. Offering persistent storage, consuming from offsets and acking. Go Micro includes support for NATS Jetstream and Redis streams.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Synchronization - Distributed systems are often built in an eventually consistent manner. Support for distributed locking and leadership are built in as a Sync interface. When using an eventually consistent database or scheduling use the Sync interface.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pluggable Interfaces - Go Micro makes use of Go interfaces for each distributed system abstraction. Because of this these interfaces are pluggable and allows Go Micro to be runtime agnostic. You can plugin any underlying technology.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="相关的-toolkit">相关的 toolkit&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-micro/api">API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/cli">CLI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/demo">Demo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/plugins">Plugins&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/examples">Examples&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/dashboard">Dashboard&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/go-micro/generator">Generator&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>git 以前的许多commit中某个文件含有密钥，怎么办？</title><link>http://cugbtang.github.io/post/devops/series-git-2/</link><pubDate>Sun, 30 Jul 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/devops/series-git-2/</guid><description>&lt;h2 id="git-以前的许多commit中某个文件含有密钥怎么办">git 以前的许多commit中某个文件含有密钥，怎么办？&lt;/h2>
&lt;h2 id="一场景描述">一、场景描述&lt;/h2>
&lt;p>在这个项目中，代码的都是在develop分支上进行的， 现在要打tag v1.0.0进行发版。然而，从项目init开始到现在有很多commit，其中某个文件中把密钥直接写在了源码中，最近几次提交才把密钥处理了。&lt;/p>
&lt;h2 id="二问问-gpt1">二、问问 gpt&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/h2>
&lt;hr>
&lt;blockquote>
&lt;p>git 一开始项目的很多提交中某个文件含有密钥，最近的几次commit中才把密钥隐藏掉，那么怎样清除之前的很多次commit中密钥; 我想把之前所有提交中密码不为&lt;em>&lt;strong>的都改为&lt;/strong>&lt;/em> 该怎么操作&lt;/p>
&lt;/blockquote>
&lt;p>要将之前所有提交中的密码更改为 &lt;code>***&lt;/code>，可以使用 &lt;code>git filter-branch&lt;/code> 命令结合自定义脚本来实现。请按照以下步骤进行操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，在你的项目目录下打开终端，并确保你当前在所需的分支上（例如，&lt;code>master&lt;/code> 分支）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来备份你的代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git branch backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建一个名为 &lt;code>replace_password.sh&lt;/code> 的脚本文件，并使用文本编辑器打开它。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 &lt;code>replace_password.sh&lt;/code> 文件中，输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">#!/bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git ls-files -z | while read -d &amp;#39;&amp;#39; -r file; do
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if [[ $file == *&amp;#34;&amp;lt;文件路径&amp;gt;&amp;#34;* ]]; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sed -i &amp;#39;s/密码模式/*** /g&amp;#39; &amp;#34;$file&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">done
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>&amp;lt;文件路径&amp;gt;&lt;/code> 替换为包含密码的文件的路径或文件夹的路径。这将会在指定文件中查找并替换密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保存并关闭 &lt;code>replace_password.sh&lt;/code> 文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来添加执行权限给脚本文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">chmod +x replace_password.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>现在，运行以下命令来执行 &lt;code>git filter-branch&lt;/code> 操作，并使用脚本文件作为过滤器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git filter-branch --tree-filter &amp;#39;/path/to/replace_password.sh&amp;#39; --prune-empty HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>/path/to/replace_password.sh&lt;/code> 替换为 &lt;code>replace_password.sh&lt;/code> 文件的实际路径。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Git 将会遍历所有的提交，并在每个提交上运行脚本文件，查找并替换指定文件中的密码。完成后，你的历史提交将被重写。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你已经将这些提交推送到远程仓库，你需要使用 &lt;code>git push --force&lt;/code> 强制推送修改后的提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git push --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>这样，你就可以使用自定义脚本来批量替换之前所有提交中的密码。但请注意，执行 &lt;code>git filter-branch&lt;/code> 操作时，也要小心谨慎，因为它会修改提交历史。确保在操作之前备份代码，并在必要时咨询有经验的 Git 使用者或开发者。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>git filter-branch &amp;ndash;tree-filter &amp;lsquo;/path/to/replace_password.sh&amp;rsquo; &amp;ndash;prune-empty HEAD
解释下这个命令&lt;/p>
&lt;/blockquote>
&lt;p>当你运行 git filter-branch 命令时，它会遍历 Git 仓库的每个提交，并对每个提交应用指定的过滤器。在这个命令中，我们使用了 &amp;ndash;tree-filter 参数来指定一个以树形结构过滤提交的过滤器。&lt;/p>
&lt;p>下面解释一下命令中各个部分的含义：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>git filter-branch: 这是执行过滤操作的 Git 命令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;ndash;tree-filter: 这是指定要应用的过滤器类型。&amp;ndash;tree-filter 可以在每个提交的工作目录中运行指定的命令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;lsquo;/path/to/replace_password.sh&amp;rsquo;: 这是具体的过滤器命令。在每个提交中，它运行 /path/to/replace_password.sh 命令来修改&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HEAD: 这是指定要过滤的提交范围。在这个命令中，我们使用 HEAD 表示过滤当前分支上的所有提交。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>通过运行上述命令，Git 将会遍历每个提交，并在每个提交上执行指定的命令，移除包含密钥文件的文件。完成后，&lt;/p>
&lt;h2 id="三小结">三、小结：&lt;/h2>
&lt;p>简化一些：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> git filter-branch --tree-filter &lt;span class="s1">&amp;#39; sed -i &amp;#34;s/aaa/*** /g&amp;#34; ./initialize/config.go&amp;#39;&lt;/span> --prune-empty HEAD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git push -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>filter-branch&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;h2 id="四参考">四、参考&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="">gpt&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E4%BD%BF%E7%94%A8-Git-%E8%B0%83%E8%AF%95">git-filter-branch&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git 合并原理</title><link>http://cugbtang.github.io/post/devops/series-git-4/</link><pubDate>Sun, 30 Jul 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/devops/series-git-4/</guid><description>&lt;h2 id="git-合并原理">git 合并原理&lt;/h2>
&lt;h2 id="一场景描述">一、场景描述&lt;/h2>
&lt;p>记录一些常用操作&lt;/p>
&lt;ul>
&lt;li>git status: 显示工作区和暂存区的状态&lt;/li>
&lt;li>git diff: 显示工作区和暂存区之间的差异&lt;/li>
&lt;li>git diff &amp;ndash;cached: 显示暂存区和最新提交之间的差异&lt;/li>
&lt;li>git diff [分支1] [分支2]: 比较两个分支之间的差异&lt;/li>
&lt;li>git grep [关键词]: 在整个代码库中搜索指定关键词&lt;/li>
&lt;li>git stash: 将当前修改暂存起来，切换到其他分支&lt;/li>
&lt;li>git reset &amp;ndash;hard [提交号]: 将当前分支的 HEAD 指针指向指定的提交，并重置工作区和暂存区&lt;/li>
&lt;li>git rm [文件]: 从版本控制中移除文件&lt;/li>
&lt;li>git rebase [提交号]: 交互式地合并、重新排序或编辑提交历史的&lt;/li>
&lt;li>git cherry-pick [提交号]: 选择某个提交，并将其应用到当前分支&lt;/li>
&lt;li>git blame [文件]: 显示指定文件的每一行是谁在哪个提交中修改的&lt;/li>
&lt;li>git blame -L [起始行号],[结束行号] [文件]: 仅显示指定行范围的文件是谁修改的&lt;/li>
&lt;li>git revert [提交号]: 创建一个新的提交，用于撤销指定的提交&lt;/li>
&lt;li>git bisect start: 启动二分查找来定位引入问题的提交&lt;/li>
&lt;li>git stash apply: 恢复最近一次暂存的修改，并将其从暂存堆栈中删除&lt;/li>
&lt;li>git reflog: 显示 HEAD 和分支的历史记录，包括已经被删除的提交&lt;/li>
&lt;li>git log &amp;ndash;author=[作者]: 显示特定作者的提交历史&lt;/li>
&lt;li>git tag [标签名] [提交号]: 在指定提交上创建一个标签&lt;/li>
&lt;li>git show-branch: 显示本地分支的历史和状态&lt;/li>
&lt;/ul>
&lt;h2 id="二问问-gpt1">二、问问 gpt&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/h2>
&lt;hr>
&lt;blockquote>
&lt;p>解释下git show&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>git show&lt;/code> 是一个非常有用的 Git 命令，它用于显示提交的详细信息和更改的内容。下面是 &lt;code>git show&lt;/code> 的详细讲解：&lt;/p>
&lt;p>基本语法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git show [提交]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参数：&lt;/p>
&lt;ul>
&lt;li>&lt;code>[提交]&lt;/code>: 可选参数，表示要查看的提交，默认为最新的提交。&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>git show&lt;/code> 命令可以获取以下信息：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>提交信息：包括提交哈希值、作者、提交日期和提交消息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改的文件：列出了与该提交相关的所有修改过的文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文件更改的具体内容：展示了每个文件的具体更改内容，即新增、修改或删除的行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码差异：以 diff 的形式显示当前提交与其父提交之间的代码差异。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其他元数据：显示提交中的其他元数据，例如签名和标签。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>示例用法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">$ git show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将显示最新提交的详细信息和更改的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">$ git show abcdef123456
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将显示提交哈希值为 &lt;code>abcdef123456&lt;/code> 的提交的详细信息和更改的内容。&lt;/p>
&lt;p>&lt;code>git show&lt;/code> 命令在查看历史提交、检查代码更改、审查提交信息等方面非常有用。通过查看提交的详细信息，开发者可以更好地理解代码库的演变历史并进行必要的代码审查和调试。记住，你可以使用其他参数和选项来进一步定制 &lt;code>git show&lt;/code> 命令的输出。可以通过 &lt;code>git show --help&lt;/code> 查看详细的帮助文档。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>解释下 git rebase -i commit&lt;/p>
&lt;/blockquote>
&lt;p>当你运行 &lt;code>git rebase -i commit&lt;/code> 命令时，你可以使用交互式界面对提交历史进行编辑。下面是一个示例：&lt;/p>
&lt;p>假设你有如下的提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">commit C: Add feature C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit A: Add feature A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在你想要将提交 B 和提交 C 合并为一个提交，并编辑提交 A 的消息。你可以运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git rebase -i commit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Git 将会打开交互式界面，其中列出了提交历史的相关信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pick abcdef1 commit A: Add feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pick bcdef23 commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pick def4567 commit C: Add feature C
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以对这些操作进行修改，以实现你的目标。在本例中，你可以将提交 B 和提交 C 合并为一个提交，然后编辑提交 A 的消息。你可以修改交互式界面如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pick abcdef1 commit A: Add feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">squash bcdef23 commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">s/commit A: Add feature A/Edit feature A/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存并退出编辑器。Git 将会根据你的指示执行相应的操作。此时，Git 会自动合并提交 B 到提交 A，并修改提交 A 的消息。最终的提交历史将如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">commit A: Edit feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit BC: Add feature B and C
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，在上述示例中，使用了 &lt;code>squash&lt;/code> 命令来将提交 B 合并到提交 A，并使用 &lt;code>s/commit A: Add feature A/Edit feature A/&lt;/code> 来编辑提交 A 的消息。&lt;/p>
&lt;p>请注意，在执行类似于 &lt;code>git rebase -i&lt;/code> 这样的操作时，一定要小心审查并确认你的更改，以免不小心破坏提交历史。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>git bisect 详细介绍下&lt;/p>
&lt;/blockquote>
&lt;p>git bisect 是 Git 提供的一个命令，用于帮助我们通过二分查找定位引入问题的提交。当我们在一个大型项目中发现了一个 bug，并且我们知道在之前的某个提交中出现了这个 bug，但是不知道具体是在哪个提交引入的时候，可以使用 git bisect 命令来快速定位。&lt;/p>
&lt;p>下面是 git bisect 的详细使用步骤：&lt;/p>
&lt;p>1、首先，进入到你的项目目录中，并确保你在一个干净的状态下（没有未提交的修改）。&lt;/p>
&lt;p>2、执行 git bisect start 命令，表示开始二分查找。&lt;/p>
&lt;p>3、通过 git bisect bad 命令告诉 Git 当前的代码状态是有问题的（即包含了 bug）。&lt;/p>
&lt;p>4、使用 git bisect good [好的提交号] 或者 git bisect good [好的标签名] 命令指定一个已知的“好”（即没有问题的）的提交。&lt;/p>
&lt;p>5、Git 会自动切换到一个中间的提交，并要求你测试这个提交是否存在 bug。根据测试结果使用 git bisect bad 或者 git bisect good 命令告诉 Git 这个中间提交是否含有 bug。&lt;/p>
&lt;p>6、重复步骤 5，Git 会根据你的测试结果不断地切换到新的中间提交，直到找到引入问题的提交。&lt;/p>
&lt;p>7、当 git bisect 定位到引入问题的提交时，Git 会给出相应的提示，并自动返回到该提交。&lt;/p>
&lt;p>8、最后，执行 git bisect reset 命令结束二分查找过程，Git 会将你的 HEAD 恢复到初始状态。&lt;/p>
&lt;p>通过以上步骤，你可以使用 git bisect 在复杂的代码历史中快速定位 bug 的引入提交。这个命令在大型项目中特别有用，可以节省定位问题的时间和精力。需要注意的是，你需要根据实际情况进行好坏提交的选择，并且在测试过程中保持良好的记录和反馈。&lt;/p>
&lt;p>要将之前所有提交中的密码更改为 &lt;code>***&lt;/code>，可以使用 &lt;code>git filter-branch&lt;/code> 命令结合自定义脚本来实现。请按照以下步骤进行操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，在你的项目目录下打开终端，并确保你当前在所需的分支上（例如，&lt;code>master&lt;/code> 分支）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来备份你的代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git branch backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建一个名为 &lt;code>replace_password.sh&lt;/code> 的脚本文件，并使用文本编辑器打开它。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 &lt;code>replace_password.sh&lt;/code> 文件中，输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">#!/bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git ls-files -z | while read -d &amp;#39;&amp;#39; -r file; do
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if [[ $file == *&amp;#34;&amp;lt;文件路径&amp;gt;&amp;#34;* ]]; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sed -i &amp;#39;s/密码模式/*** /g&amp;#39; &amp;#34;$file&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">done
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>&amp;lt;文件路径&amp;gt;&lt;/code> 替换为包含密码的文件的路径或文件夹的路径。这将会在指定文件中查找并替换密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保存并关闭 &lt;code>replace_password.sh&lt;/code> 文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来添加执行权限给脚本文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">chmod +x replace_password.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>现在，运行以下命令来执行 &lt;code>git filter-branch&lt;/code> 操作，并使用脚本文件作为过滤器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git filter-branch --tree-filter &amp;#39;/path/to/replace_password.sh&amp;#39; --prune-empty HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>/path/to/replace_password.sh&lt;/code> 替换为 &lt;code>replace_password.sh&lt;/code> 文件的实际路径。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Git 将会遍历所有的提交，并在每个提交上运行脚本文件，查找并替换指定文件中的密码。完成后，你的历史提交将被重写。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你已经将这些提交推送到远程仓库，你需要使用 &lt;code>git push --force&lt;/code> 强制推送修改后的提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git push --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>这样，你就可以使用自定义脚本来批量替换之前所有提交中的密码。但请注意，执行 &lt;code>git filter-branch&lt;/code> 操作时，也要小心谨慎，因为它会修改提交历史。确保在操作之前备份代码，并在必要时咨询有经验的 Git 使用者或开发者。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>sparse-checkout 详细讲解下&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>sparse-checkout&lt;/code> 是 Git 的一个功能，用于部分克隆（partial clone）仓库。它允许你只检出仓库中指定目录或文件的内容，而不是完整地克隆整个仓库。这对于大型仓库或仅需要特定部分代码的情况非常有用，可以显著节省下载和存储空间。&lt;/p>
&lt;p>下面是 &lt;code>sparse-checkout&lt;/code> 的详细讲解：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>配置 &lt;code>sparse-checkout&lt;/code>：在进行部分克隆之前，需先配置 &lt;code>sparse-checkout&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git sparse-checkout init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>添加感兴趣的目录或文件：通过指定要检出的目录或文件，告诉 Git 哪些部分是你感兴趣的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git sparse-checkout &lt;span class="nb">set&lt;/span> &amp;lt;目录/文件&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以多次运行该命令来添加多个目录或文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完成部分克隆：现在你可以执行部分克隆命令，只拉取感兴趣的部分。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git clone --filter&lt;span class="o">=&lt;/span>blob:none &amp;lt;远程仓库URL&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，在使用 &lt;code>--filter=blob:none&lt;/code> 标志进行部分克隆时，仓库中的大文件将不会被下载，只有文件元数据（例如文件名和文件大小）会被获取。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新和同步：一旦你进行了部分克隆，你可以像常规 Git 仓库一样更新和同步。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git pull origin &amp;lt;分支&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Git 会根据你配置的 &lt;code>sparse-checkout&lt;/code> 来更新和同步你感兴趣的部分。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总结来说，&lt;code>sparse-checkout&lt;/code> 提供了一种灵活的方式来只检出仓库中特定目录或文件的内容。它可以实现部分克隆，节省带宽和存储空间，并提高代码仓库的下载速度。记住，部分克隆功能在 Git 2.25 及更高版本中才可用。&lt;/p>
&lt;h2 id="三小结">三、小结：&lt;/h2>
&lt;p>附上一些常用缩写：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git config&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git status&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ga&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git add&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gaa&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git add -all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git push&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git pull&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit -m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcam&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit -am&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gbr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch -r&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gba&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch -a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gco&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git checkout&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git checkout -b&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git merge&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git diff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gdw&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git diff --word-diff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">glg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git lg&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="四参考">四、参考&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="">gpt&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git 常用操作</title><link>http://cugbtang.github.io/post/devops/series-git-3/</link><pubDate>Sun, 30 Jul 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/devops/series-git-3/</guid><description>&lt;h2 id="git-常用操作">git 常用操作&lt;/h2>
&lt;h2 id="一场景描述">一、场景描述&lt;/h2>
&lt;p>记录一些常用操作&lt;/p>
&lt;ul>
&lt;li>git status: 显示工作区和暂存区的状态&lt;/li>
&lt;li>git diff: 显示工作区和暂存区之间的差异&lt;/li>
&lt;li>git diff &amp;ndash;cached: 显示暂存区和最新提交之间的差异&lt;/li>
&lt;li>git diff [分支1] [分支2]: 比较两个分支之间的差异&lt;/li>
&lt;li>git grep [关键词]: 在整个代码库中搜索指定关键词&lt;/li>
&lt;li>git stash: 将当前修改暂存起来，切换到其他分支&lt;/li>
&lt;li>git reset &amp;ndash;hard [提交号]: 将当前分支的 HEAD 指针指向指定的提交，并重置工作区和暂存区&lt;/li>
&lt;li>git rm [文件]: 从版本控制中移除文件&lt;/li>
&lt;li>git rebase [提交号]: 交互式地合并、重新排序或编辑提交历史的&lt;/li>
&lt;li>git cherry-pick [提交号]: 选择某个提交，并将其应用到当前分支&lt;/li>
&lt;li>git blame [文件]: 显示指定文件的每一行是谁在哪个提交中修改的&lt;/li>
&lt;li>git blame -L [起始行号],[结束行号] [文件]: 仅显示指定行范围的文件是谁修改的&lt;/li>
&lt;li>git revert [提交号]: 创建一个新的提交，用于撤销指定的提交&lt;/li>
&lt;li>git bisect start: 启动二分查找来定位引入问题的提交&lt;/li>
&lt;li>git stash apply: 恢复最近一次暂存的修改，并将其从暂存堆栈中删除&lt;/li>
&lt;li>git reflog: 显示 HEAD 和分支的历史记录，包括已经被删除的提交&lt;/li>
&lt;li>git log &amp;ndash;author=[作者]: 显示特定作者的提交历史&lt;/li>
&lt;li>git tag [标签名] [提交号]: 在指定提交上创建一个标签&lt;/li>
&lt;li>git show-branch: 显示本地分支的历史和状态&lt;/li>
&lt;/ul>
&lt;h2 id="二问问-gpt1">二、问问 gpt&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/h2>
&lt;hr>
&lt;blockquote>
&lt;p>解释下git show&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>git show&lt;/code> 是一个非常有用的 Git 命令，它用于显示提交的详细信息和更改的内容。下面是 &lt;code>git show&lt;/code> 的详细讲解：&lt;/p>
&lt;p>基本语法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git show [提交]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参数：&lt;/p>
&lt;ul>
&lt;li>&lt;code>[提交]&lt;/code>: 可选参数，表示要查看的提交，默认为最新的提交。&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>git show&lt;/code> 命令可以获取以下信息：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>提交信息：包括提交哈希值、作者、提交日期和提交消息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改的文件：列出了与该提交相关的所有修改过的文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文件更改的具体内容：展示了每个文件的具体更改内容，即新增、修改或删除的行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码差异：以 diff 的形式显示当前提交与其父提交之间的代码差异。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其他元数据：显示提交中的其他元数据，例如签名和标签。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>示例用法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">$ git show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将显示最新提交的详细信息和更改的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">$ git show abcdef123456
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将显示提交哈希值为 &lt;code>abcdef123456&lt;/code> 的提交的详细信息和更改的内容。&lt;/p>
&lt;p>&lt;code>git show&lt;/code> 命令在查看历史提交、检查代码更改、审查提交信息等方面非常有用。通过查看提交的详细信息，开发者可以更好地理解代码库的演变历史并进行必要的代码审查和调试。记住，你可以使用其他参数和选项来进一步定制 &lt;code>git show&lt;/code> 命令的输出。可以通过 &lt;code>git show --help&lt;/code> 查看详细的帮助文档。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>解释下 git rebase -i commit&lt;/p>
&lt;/blockquote>
&lt;p>当你运行 &lt;code>git rebase -i commit&lt;/code> 命令时，你可以使用交互式界面对提交历史进行编辑。下面是一个示例：&lt;/p>
&lt;p>假设你有如下的提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">commit C: Add feature C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit A: Add feature A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在你想要将提交 B 和提交 C 合并为一个提交，并编辑提交 A 的消息。你可以运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git rebase -i commit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Git 将会打开交互式界面，其中列出了提交历史的相关信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pick abcdef1 commit A: Add feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pick bcdef23 commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pick def4567 commit C: Add feature C
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以对这些操作进行修改，以实现你的目标。在本例中，你可以将提交 B 和提交 C 合并为一个提交，然后编辑提交 A 的消息。你可以修改交互式界面如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pick abcdef1 commit A: Add feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">squash bcdef23 commit B: Add feature B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">s/commit A: Add feature A/Edit feature A/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存并退出编辑器。Git 将会根据你的指示执行相应的操作。此时，Git 会自动合并提交 B 到提交 A，并修改提交 A 的消息。最终的提交历史将如下所示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">commit A: Edit feature A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit BC: Add feature B and C
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，在上述示例中，使用了 &lt;code>squash&lt;/code> 命令来将提交 B 合并到提交 A，并使用 &lt;code>s/commit A: Add feature A/Edit feature A/&lt;/code> 来编辑提交 A 的消息。&lt;/p>
&lt;p>请注意，在执行类似于 &lt;code>git rebase -i&lt;/code> 这样的操作时，一定要小心审查并确认你的更改，以免不小心破坏提交历史。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>git bisect 详细介绍下&lt;/p>
&lt;/blockquote>
&lt;p>git bisect 是 Git 提供的一个命令，用于帮助我们通过二分查找定位引入问题的提交。当我们在一个大型项目中发现了一个 bug，并且我们知道在之前的某个提交中出现了这个 bug，但是不知道具体是在哪个提交引入的时候，可以使用 git bisect 命令来快速定位。&lt;/p>
&lt;p>下面是 git bisect 的详细使用步骤：&lt;/p>
&lt;p>1、首先，进入到你的项目目录中，并确保你在一个干净的状态下（没有未提交的修改）。&lt;/p>
&lt;p>2、执行 git bisect start 命令，表示开始二分查找。&lt;/p>
&lt;p>3、通过 git bisect bad 命令告诉 Git 当前的代码状态是有问题的（即包含了 bug）。&lt;/p>
&lt;p>4、使用 git bisect good [好的提交号] 或者 git bisect good [好的标签名] 命令指定一个已知的“好”（即没有问题的）的提交。&lt;/p>
&lt;p>5、Git 会自动切换到一个中间的提交，并要求你测试这个提交是否存在 bug。根据测试结果使用 git bisect bad 或者 git bisect good 命令告诉 Git 这个中间提交是否含有 bug。&lt;/p>
&lt;p>6、重复步骤 5，Git 会根据你的测试结果不断地切换到新的中间提交，直到找到引入问题的提交。&lt;/p>
&lt;p>7、当 git bisect 定位到引入问题的提交时，Git 会给出相应的提示，并自动返回到该提交。&lt;/p>
&lt;p>8、最后，执行 git bisect reset 命令结束二分查找过程，Git 会将你的 HEAD 恢复到初始状态。&lt;/p>
&lt;p>通过以上步骤，你可以使用 git bisect 在复杂的代码历史中快速定位 bug 的引入提交。这个命令在大型项目中特别有用，可以节省定位问题的时间和精力。需要注意的是，你需要根据实际情况进行好坏提交的选择，并且在测试过程中保持良好的记录和反馈。&lt;/p>
&lt;p>要将之前所有提交中的密码更改为 &lt;code>***&lt;/code>，可以使用 &lt;code>git filter-branch&lt;/code> 命令结合自定义脚本来实现。请按照以下步骤进行操作：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先，在你的项目目录下打开终端，并确保你当前在所需的分支上（例如，&lt;code>master&lt;/code> 分支）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来备份你的代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git branch backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建一个名为 &lt;code>replace_password.sh&lt;/code> 的脚本文件，并使用文本编辑器打开它。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 &lt;code>replace_password.sh&lt;/code> 文件中，输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">#!/bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git ls-files -z | while read -d &amp;#39;&amp;#39; -r file; do
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if [[ $file == *&amp;#34;&amp;lt;文件路径&amp;gt;&amp;#34;* ]]; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sed -i &amp;#39;s/密码模式/*** /g&amp;#39; &amp;#34;$file&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">done
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>&amp;lt;文件路径&amp;gt;&lt;/code> 替换为包含密码的文件的路径或文件夹的路径。这将会在指定文件中查找并替换密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保存并关闭 &lt;code>replace_password.sh&lt;/code> 文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行以下命令来添加执行权限给脚本文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">chmod +x replace_password.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>现在，运行以下命令来执行 &lt;code>git filter-branch&lt;/code> 操作，并使用脚本文件作为过滤器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git filter-branch --tree-filter &amp;#39;/path/to/replace_password.sh&amp;#39; --prune-empty HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 &lt;code>/path/to/replace_password.sh&lt;/code> 替换为 &lt;code>replace_password.sh&lt;/code> 文件的实际路径。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Git 将会遍历所有的提交，并在每个提交上运行脚本文件，查找并替换指定文件中的密码。完成后，你的历史提交将被重写。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你已经将这些提交推送到远程仓库，你需要使用 &lt;code>git push --force&lt;/code> 强制推送修改后的提交历史：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">git push --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>这样，你就可以使用自定义脚本来批量替换之前所有提交中的密码。但请注意，执行 &lt;code>git filter-branch&lt;/code> 操作时，也要小心谨慎，因为它会修改提交历史。确保在操作之前备份代码，并在必要时咨询有经验的 Git 使用者或开发者。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>sparse-checkout 详细讲解下&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>sparse-checkout&lt;/code> 是 Git 的一个功能，用于部分克隆（partial clone）仓库。它允许你只检出仓库中指定目录或文件的内容，而不是完整地克隆整个仓库。这对于大型仓库或仅需要特定部分代码的情况非常有用，可以显著节省下载和存储空间。&lt;/p>
&lt;p>下面是 &lt;code>sparse-checkout&lt;/code> 的详细讲解：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>配置 &lt;code>sparse-checkout&lt;/code>：在进行部分克隆之前，需先配置 &lt;code>sparse-checkout&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git sparse-checkout init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>添加感兴趣的目录或文件：通过指定要检出的目录或文件，告诉 Git 哪些部分是你感兴趣的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git sparse-checkout &lt;span class="nb">set&lt;/span> &amp;lt;目录/文件&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你可以多次运行该命令来添加多个目录或文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完成部分克隆：现在你可以执行部分克隆命令，只拉取感兴趣的部分。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git clone --filter&lt;span class="o">=&lt;/span>blob:none &amp;lt;远程仓库URL&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意，在使用 &lt;code>--filter=blob:none&lt;/code> 标志进行部分克隆时，仓库中的大文件将不会被下载，只有文件元数据（例如文件名和文件大小）会被获取。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新和同步：一旦你进行了部分克隆，你可以像常规 Git 仓库一样更新和同步。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ git pull origin &amp;lt;分支&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Git 会根据你配置的 &lt;code>sparse-checkout&lt;/code> 来更新和同步你感兴趣的部分。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总结来说，&lt;code>sparse-checkout&lt;/code> 提供了一种灵活的方式来只检出仓库中特定目录或文件的内容。它可以实现部分克隆，节省带宽和存储空间，并提高代码仓库的下载速度。记住，部分克隆功能在 Git 2.25 及更高版本中才可用。&lt;/p>
&lt;h2 id="三小结">三、小结：&lt;/h2>
&lt;p>附上一些常用缩写：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git config&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git status&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">g&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ga&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git add&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gaa&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git add -all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git push&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git pull&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit -m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcam&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit -am&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gbr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch -r&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gba&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git branch -a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gco&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git checkout&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gcb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git checkout -b&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gm&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git merge&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git diff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gdw&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git diff --word-diff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">glg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git lg&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="四参考">四、参考&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="">gpt&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git 部分功能需要先上线，怎么办？</title><link>http://cugbtang.github.io/post/devops/series-git-1/</link><pubDate>Sun, 30 Jul 2023 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/devops/series-git-1/</guid><description>&lt;h2 id="git-部分功能需要先上线怎么办">git 部分功能需要先上线，怎么办？&lt;/h2>
&lt;h2 id="一场景描述">一、场景描述&lt;/h2>
&lt;p>在这个项目中，代码的提交和合并都是在develop分支上进行的， 之前已经基于某个commit打了tag v1.0.0。然而，这次由于迭代过程中需要提前上线部分功能，我们需要将这部分功能的commit摘出来，并打上一个tag v1.1.0 作为标识。&lt;/p>
&lt;h2 id="二问问-gpt1">二、问问 gpt&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/h2>
&lt;p>首先，我们可以使用Git命令行或者图形化界面工具来处理这个需求。假设我们当前的工作目录在develop分支上。&lt;/p>
&lt;ul>
&lt;li>确保你的本地develop分支是最新的，可以执行以下命令拉取最新的代码：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git pull origin develop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>查看git log，找到需要提前上线的commit的哈希值或者commit消息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用以下命令将指定的commit摘出来并创建一个新的分支（例如feature-branch）：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git checkout -b feature-branch &amp;lt;commit&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将创建一个新的分支，并将代码库中指定的commit复制到该分支上。&lt;/p>
&lt;ul>
&lt;li>使用以下命令将涉及到这次提前发布需要的commit提交应用到feature-branch分支：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git cherry-pick &amp;lt;commit1&amp;gt; &amp;lt;commit2&amp;gt; &amp;lt;commit1&amp;gt; &amp;lt;commit1&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中，&lt;code>&amp;lt;commit&amp;gt;&lt;/code> 可以是提交的哈希值或者提交消息。&lt;/p>
&lt;ul>
&lt;li>接下来，我们需要打上一个tag来标识这个版本。使用以下命令创建一个tag（例如v1.1.0）：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git tag v1.1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将在当前commit上创建一个tag。&lt;/p>
&lt;ul>
&lt;li>最后，将创建的分支和tag推送到远程仓库：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git push origin feature-branch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin v1.1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将把新的分支和tag推送到远程仓库中，以便团队成员可以访问和查看。&lt;/p>
&lt;h2 id="三小结">三、小结：&lt;/h2>
&lt;ul>
&lt;li>基于某个commit checkout&lt;/li>
&lt;li>cherry-pick&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;h2 id="四参考">四、参考&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="">gpt&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a href="https://www.git-scm.com/docs/git-cherry-pick">git-cherry-pick&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Container, how to play?</title><link>http://cugbtang.github.io/post/container/series-container-1/</link><pubDate>Wed, 01 Jun 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/container/series-container-1/</guid><description>&lt;h1 id="container-technology-become-a-necessary-for-developer-during-operating-the-linux-system">container technology become a necessary for developer during operating the linux system.&lt;/h1>
&lt;h2 id="一namespace">一、namespace&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>定义&lt;/p>
&lt;p>namespace是 Linux 内核的一项功能，该功能对内核资源进行分区，以使一组进程看到一组资源，而另一组进程看到另一组资源。namespace 的工作方式通过为一组资源和进程设置相同的 namespace 而起作用，但是这些 namespace 引用了不同的资源。资源可能存在于多个 namespace 中。这些资源可以是进程ID、主机名、用户ID、文件名、与网络访问相关的名称和进程间通信。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征&lt;/p>
&lt;p>可以实现在同一主机系统中对进程ID、主机名、用户名ID、文件名、网络和进程间通信等资源的隔离。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类型&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">namespace&lt;/th>
&lt;th style="text-align:center">summary&lt;/th>
&lt;th style="text-align:center">kernel&lt;/th>
&lt;th>describe&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">Mount(mnt)&lt;/td>
&lt;td style="text-align:center">隔离挂载点&lt;/td>
&lt;td style="text-align:center">2.4.19&lt;/td>
&lt;td>隔离不同的进程或进程组看到的挂载点，实现容器内只能看到自己的挂在信息，在容器内的挂载操作不会影响主机的挂载目录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Process ID(pid)&lt;/td>
&lt;td style="text-align:center">隔离进程 ID&lt;/td>
&lt;td style="text-align:center">2.6.24&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Network(net)&lt;/td>
&lt;td style="text-align:center">隔离网络设备，端口号等&lt;/td>
&lt;td style="text-align:center">2.6.29&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Interprocess Communication(ipc)&lt;/td>
&lt;td style="text-align:center">隔离 System VIPC 和 POSIX message queues&lt;/td>
&lt;td style="text-align:center">2.6.19&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">UTS Namespace(uts)&lt;/td>
&lt;td style="text-align:center">隔离主机名和域名&lt;/td>
&lt;td style="text-align:center">2.6.19&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">User Namespace(user)&lt;/td>
&lt;td style="text-align:center">隔离用户和用户组&lt;/td>
&lt;td style="text-align:center">3.8&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Control group(cgroup) Namespce&lt;/td>
&lt;td style="text-align:center">隔离 Cgroups 根目录&lt;/td>
&lt;td style="text-align:center">4.6&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Time Namespace&lt;/td>
&lt;td style="text-align:center">隔离系统时间&lt;/td>
&lt;td style="text-align:center">5.6&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="11mount-namespace">1.1、Mount Namespace&lt;/h3>
&lt;p>使用 unshare 命令可以新建 Mount Namespace，并且在新建的 Mount Namespace 内 mount 是和外部完全隔离的。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建一个bash 进程并且新建一个 Mount Namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@localhost ~&lt;span class="o">]&lt;/span>$ sudo unshare --mount --fork /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>验证在独立的 namespce 内挂载文件，不影响别的&lt;/p>
&lt;p>在 /tmp 目录下创建一个目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># mkdir /tmp/tmpfs&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用 mount 命令挂载一个 tmpfs 类型的目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># mount -t tmpfs -o size=20m tmpfs /tmp/tmpfs&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用 df 命令查看已经挂载的目录信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># df -h&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1 40G 3.8G 37G 10% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">devtmpfs 457M &lt;span class="m">0&lt;/span> 457M 0% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M &lt;span class="m">0&lt;/span> 464M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M &lt;span class="m">0&lt;/span> 464M 0% /sys/fs/cgroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M 13M 451M 3% /run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 93M &lt;span class="m">0&lt;/span> 93M 0% /run/user/1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//172.29.0.1/vgt-2469b42ebff188de622646551002b263-6ad5fdbcbf2eaa93bd62f92333a2e6e5 466G 171G 295G 37% /vagrant
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 20M &lt;span class="m">0&lt;/span> 20M 0% /tmp/tmpfs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>新打开一个命令窗口，执行 df 命令查看主机的挂载信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@localhost ~&lt;span class="o">]&lt;/span>$ df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">devtmpfs 457M &lt;span class="m">0&lt;/span> 457M 0% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M &lt;span class="m">0&lt;/span> 464M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M 13M 451M 3% /run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 464M &lt;span class="m">0&lt;/span> 464M 0% /sys/fs/cgroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1 40G 3.8G 37G 10% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//172.29.0.1/vgt-2469b42ebff188de622646551002b263-6ad5fdbcbf2eaa93bd62f92333a2e6e5 466G 171G 295G 37% /vagrant
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 93M &lt;span class="m">0&lt;/span> 93M 0% /run/user/1000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>基本验证完毕。接着我们查看新的mount namespace 信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ls -l /proc/self/ns/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 ipc -&amp;gt; ipc:&lt;span class="o">[&lt;/span>4026531839&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 mnt -&amp;gt; mnt:&lt;span class="o">[&lt;/span>4026532117&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 net -&amp;gt; net:&lt;span class="o">[&lt;/span>4026531956&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 pid -&amp;gt; pid:&lt;span class="o">[&lt;/span>4026531836&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 user -&amp;gt; user:&lt;span class="o">[&lt;/span>4026531837&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:56 uts -&amp;gt; uts:&lt;span class="o">[&lt;/span>4026531838&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>新打开一个命令窗口，使用相同的命令查看主机上的 namespace 信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@localhost ~&lt;span class="o">]&lt;/span>$ ls -l /proc/self/ns/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 ipc -&amp;gt; ipc:&lt;span class="o">[&lt;/span>4026531839&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 mnt -&amp;gt; mnt:&lt;span class="o">[&lt;/span>4026531840&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 net -&amp;gt; net:&lt;span class="o">[&lt;/span>4026531956&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 pid -&amp;gt; pid:&lt;span class="o">[&lt;/span>4026531836&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 user -&amp;gt; user:&lt;span class="o">[&lt;/span>4026531837&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> vagrant vagrant &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 09:57 uts -&amp;gt; uts:&lt;span class="o">[&lt;/span>4026531838&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="12pid-namespace">1.2、PID Namespace&lt;/h3>
&lt;blockquote>
&lt;p>用来隔离进程，在不同的namespace内可以拥有相同的进程号&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>创建一个 bash 进程，并且新建一个 PID Namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@localhost ~&lt;span class="o">]&lt;/span>$ sudo unshare --pid --fork --mount-proc /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在当前的命令行窗口使用 ps aux 命令查看进程信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ps aux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="m">1&lt;/span> 0.0 0.2 &lt;span class="m">15792&lt;/span> &lt;span class="m">2616&lt;/span> pts/3 S 13:59 0:00 /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="m">16&lt;/span> 0.0 0.1 &lt;span class="m">55192&lt;/span> &lt;span class="m">1844&lt;/span> pts/3 R+ 14:02 0:00 ps aux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="13uts-namespace">1.3、UTS Namespace&lt;/h3>
&lt;blockquote>
&lt;p>它允许每个UTS Namespace 拥有一个独立的主机名&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>使用 unshare 命令创建一个 UTS Namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@localhost ~&lt;span class="o">]&lt;/span>$ sudo unshare --uts --fork /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用 hostname 命令设置主机&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># hostname -b docker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>新打开一个命令行窗口，使用相同的命令查看主机的hostname&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># localhost&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="14ipc-namespace">1.4、IPC Namespace&lt;/h3>
&lt;blockquote>
&lt;p>主要用来隔离进程间通信的。PID Namespace 和 IPC Namespace一起使用可以实现同一 IPC Namespace 内的进程彼此可以通信，不同 IPC Namespace 的进程却不能通信。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>使用 unshare 命令创建一个 IPC Namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ sudo unshare --ipc --fork /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>另起一个窗口，查看系统的通信进程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ ipcs -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">------ Message Queues --------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">key msqid owner perms used-bytes messages
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在新的ipc namespace下新建一个进程通信队列&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ipcmk -Q&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Message queue id: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看当前ipc namespace 下的系统通信队列列表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ipcs -q&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">------ Message Queues --------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">key msqid owner perms used-bytes messages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0x2ae315e9 &lt;span class="m">0&lt;/span> root &lt;span class="m">644&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>再次查看主机的系统通信队列&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ ipcs -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">------ Message Queues --------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">key msqid owner perms used-bytes messages
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="15user-namespace">1.5、User Namespace&lt;/h3>
&lt;blockquote>
&lt;p>主要用来隔离用户和用户组。可以实现进程在容器内拥有 root 权限， 而在主机上却只是普通用户。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>以普通用户的身份创建一个 User Namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ unshare --user --fork /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">unshare: unshare failed: Invalid argument
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看内核版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ uname -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Linux docker 3.10.0-1127.el7.x86_64 &lt;span class="c1">#1 SMP Tue Mar 31 23:36:51 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查阅资料&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># max_user_namespaces文件记录了允许创建的user namespace数量，我的CentOS 7.5默认是0，修改之&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="m">2147483647&lt;/span> &amp;gt; /proc/sys/user/max_user_namespaces
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 再次运行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ unshare --user -r /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker ~&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>执行 id 命令查看当前的用户信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">uid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="o">(&lt;/span>root&lt;span class="o">)&lt;/span> &lt;span class="nv">gid&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="o">(&lt;/span>root&lt;span class="o">)&lt;/span> &lt;span class="nv">groups&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="o">(&lt;/span>root&lt;span class="o">)&lt;/span>,65534&lt;span class="o">(&lt;/span>nfsnobody&lt;span class="o">)&lt;/span> &lt;span class="nv">context&lt;/span>&lt;span class="o">=&lt;/span>unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在当前窗口执行 reboot 命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># reboot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Failed to open /dev/initctl: Permission denied
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Failed to talk to init daemon.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="16net-namespace">1.6、Net Namespace&lt;/h3>
&lt;blockquote>
&lt;p>用来隔离网络设备、IP地址和端口等信息。&lt;/p>
&lt;p>可以让每个进程拥有自己独立的IP地址，端口和网卡信息&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>首先查看主机上的ip 信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ ip a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">65536&lt;/span> qdisc noqueue state UNKNOWN group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 127.0.0.1/8 scope host lo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 ::1/128 scope host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m">1500&lt;/span> qdisc mq state UP group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 00:15:5d:25:01:09 brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 172.29.5.132/20 brd 172.29.15.255 scope global noprefixroute dynamic eth0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft 82979sec preferred_lft 82979sec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet6 fe80::215:5dff:fe25:109/64 scope link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3: docker0: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu &lt;span class="m">1500&lt;/span> qdisc noqueue state DOWN group default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/ether 02:42:f0:82:11:e0 brd ff:ff:ff:ff:ff:ff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> valid_lft forever preferred_lft forever
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建 net namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ sudo unshare --net --fork /bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用 ip a命令查看当前namespace的网络信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ip a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1: lo: &amp;lt;LOOPBACK&amp;gt; mtu &lt;span class="m">65536&lt;/span> qdisc noop state DOWN group default qlen &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="17为什么-docker-需要-namespace">1.7、为什么 docker 需要 namespace?&lt;/h3>
&lt;p>Linux 内核从2002年2.4.19版本开始加入了 Mount Namspace&lt;/p>
&lt;p>内核3.8版本加入了 User Namespace 为容器提供了足够的支持功能&lt;/p>
&lt;p>当 docker 新建一个容器时&lt;/p>
&lt;p>会创建这六种 namespace， 然后将容器中的进程加入这些 namespace之中&lt;/p>
&lt;h2 id="二cgroups">二、Cgroups&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>定义&lt;/p>
&lt;p>全程是 control groups， 是Linux 内核的一个功能。可以实现限制进程或者进程组的资源（cpu、mem、磁盘IO等）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征&lt;/p>
&lt;p>资源限制：限制资源的使用量&lt;/p>
&lt;p>优先级控制： 不同的组可以有不用的资源使用优先级&lt;/p>
&lt;p>审计：计算控制组的资源使用情况&lt;/p>
&lt;p>控制： 控制进程的挂起或恢复&lt;/p>
&lt;/li>
&lt;li>
&lt;p>核心&lt;/p>
&lt;p>subsystem: 一个内核的组件，代表一类资源调度控制器&lt;/p>
&lt;p>cgroup： 表示一组进程和一组带有参数的子系统的关联关系&lt;/p>
&lt;p>hierarchy：由一些列的控制组按照树状结构排列组成的子控制组默认拥有父控制组的属性&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="21subsystem">2.1、subsystem&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>查看当前主机使用了哪些子系统&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@docker ~&lt;span class="o">]&lt;/span>$ sudo mount -t cgroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/systemd &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,xattr,release_agent&lt;span class="o">=&lt;/span>/usr/lib/systemd/systemd-cgroups-agent,name&lt;span class="o">=&lt;/span>systemd&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/cpuset &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,cpuset&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/cpu,cpuacct &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,cpuacct,cpu&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/perf_event &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,perf_event&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/blkio &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,blkio&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/memory &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,memory&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/hugetlb &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,hugetlb&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/freezer &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,freezer&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/net_cls,net_prio &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,net_prio,net_cls&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/devices &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,devices&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup on /sys/fs/cgroup/pids &lt;span class="nb">type&lt;/span> cgroup &lt;span class="o">(&lt;/span>rw,nosuid,nodev,noexec,relatime,seclabel,pids&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>以 cpu 子系统为例，演示 cgroups 如何限制进程的 cpu使用时间&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#在cpu子系统下创建测试文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /sys/fs/cgroup/cpu/mydocker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker vagrant&lt;span class="o">]&lt;/span>&lt;span class="c1"># ls /sys/fs/cgroup/cpu/mydocker -l&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cgroup.clone_children
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--w--w--w-. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cgroup.event_control
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cgroup.procs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-r--r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpuacct.stat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpuacct.usage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-r--r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpuacct.usage_percpu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.cfs_period_us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.cfs_quota_us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.rt_period_us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.rt_runtime_us
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.shares
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-r--r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 cpu.stat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 notify_on_release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root &lt;span class="m">0&lt;/span> Feb &lt;span class="m">26&lt;/span> 15:15 tasks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 将当前shell进程加入cgroup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># echo $$&amp;gt; tasks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看tasks文件内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>mem&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在memory子系统下创建cgroup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># mkdir /sys/fs/cgroup/memory/mydocker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看新建目录中的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># ls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup.clone_children
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup.event_control
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cgroup.procs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.failcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.force_empty
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.failcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.limit_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.max_usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.slabinfo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.tcp.failcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.tcp.limit_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.tcp.max_usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.tcp.usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.kmem.usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.limit_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.max_usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.memsw.failcnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.memsw.limit_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.memsw.max_usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.memsw.usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.move_charge_at_immigrate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.numa_stat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.oom_control
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.pressure_level
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.soft_limit_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.stat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.swappiness
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.usage_in_bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory.use_hierarchy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">notify_on_release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tasks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 限制内存使用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># echo 1073741824 &amp;gt; memory.limit_in_bytes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 将当前shell写入tasks内&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># echo $$&amp;gt;tasks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># cat tasks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3356&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3484&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 申请内存，当达到1G时 被杀死&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># memtester 1500M 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memtester version 4.3.0 &lt;span class="o">(&lt;/span>64-bit&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Copyright &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span> 2001-2012 Charles Cazabon.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Licensed under the GNU General Public License version &lt;span class="m">2&lt;/span> &lt;span class="o">(&lt;/span>only&lt;span class="o">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pagesize is &lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pagesizemask is 0xfffffffffffff000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">want 1500MB &lt;span class="o">(&lt;/span>&lt;span class="m">1572864000&lt;/span> bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">got 1500MB &lt;span class="o">(&lt;/span>&lt;span class="m">1572864000&lt;/span> bytes&lt;span class="o">)&lt;/span>, trying mlock ...Killed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 修改申请大小，完美&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@docker mydocker&lt;span class="o">]&lt;/span>&lt;span class="c1"># memtester 500M 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memtester version 4.3.0 &lt;span class="o">(&lt;/span>64-bit&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Copyright &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span> 2001-2012 Charles Cazabon.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Licensed under the GNU General Public License version &lt;span class="m">2&lt;/span> &lt;span class="o">(&lt;/span>only&lt;span class="o">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pagesize is &lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pagesizemask is 0xfffffffffffff000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">want 500MB &lt;span class="o">(&lt;/span>&lt;span class="m">524288000&lt;/span> bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">got 500MB &lt;span class="o">(&lt;/span>&lt;span class="m">524288000&lt;/span> bytes&lt;span class="o">)&lt;/span>, trying mlock ...locked.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Loop 1/1:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stuck Address : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Random Value : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare XOR : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare SUB : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare MUL : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare DIV : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare OR : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compare AND : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Sequential Increment: ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Solid Bits : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Block Sequential : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Checkerboard : ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Bit Spread : ok
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>docker 是如何使用cgroups的？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">docker run -ti -m&lt;span class="o">=&lt;/span>1g nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="三联合文件系统">三、联合文件系统&lt;/h2></description></item><item><title>kubeadm startup Kubernetes less than v1.20.0 (centos+docker+ipvs+calico)</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-2/</link><pubDate>Sun, 15 May 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-2/</guid><description>&lt;h2 id="一更新系统软件全部节点">一、更新系统软件（全部节点）&lt;/h2>
&lt;p>由于 Docker 对系统内核有一定的要求，所以我们最好使用 yum 来更新系统软件及其内核。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#备份本地 yum 源&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取阿里 yum 源配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#清理 yum&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum clean all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#更新软件版本并且更新现有软件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum -y update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="二基础环境设置全部节点">二、基础环境设置（全部节点）&lt;/h2>
&lt;p>Kubernetes 需要一定的环境来保证正常运行，如各个节点时间同步，主机名称解析，关闭防火墙等等。&lt;/p>
&lt;h3 id="1修改-host">1、修改 Host&lt;/h3>
&lt;p>分布式系统环境中的多主机通信通常基于主机名称进行，这在 IP 地址存在变化的可能性时为主机提供了固定的访问入口，因此一般需要有专用的 DNS 服务负责解析各节点主机。考虑到此处部署的是&lt;strong>测试集群&lt;/strong>，因此为了降低系复杂度，这里将基于 hosts 的文件进行主机名称解析。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ vim /etc/hosts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 加入以下内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.2.11 k8s-master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.2.12 k8s-node-01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.2.13 k8s-node-02
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2修改-hostname">2、修改 Hostname&lt;/h3>
&lt;p>kubernetes 中会以各个服务的 hostname 为其节点命名，所以需要进入不同的服务器修改 hostname 名称。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#修改 192.168.2.11 服务器，设置 hostname，然后将 hostname 写入 hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hostnamectl set-hostname k8s-master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1 &lt;/span>&lt;span class="k">$(&lt;/span>hostname&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/hosts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#修改 192.168.2.12 服务器，设置 hostname，然后将 hostname 写入 hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hostnamectl set-hostname k8s-node-01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1 &lt;/span>&lt;span class="k">$(&lt;/span>hostname&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/hosts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#修改 192.168.2.13 服务器，设置 hostname，然后将 hostname 写入 hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ hostnamectl set-hostname k8s-node-02
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1 &lt;/span>&lt;span class="k">$(&lt;/span>hostname&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/hosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3主机时间同步">3、主机时间同步&lt;/h3>
&lt;p>etcd 集群各机器需要时间同步，chrony 用于系统时间同步；&lt;/p>
&lt;p>将各个服务器的时间同步，并设置开机启动同步时间服务。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> $ timedatectl set-timezone Asia/Shanghai
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $ systemctl start chronyd.service &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl &lt;span class="nb">enable&lt;/span> chronyd.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $ timedatectl status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#System clock synchronized: yes,表示时钟已同步；&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># NTP service: active,表示开启了时钟同步服务；&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># RTC in local TZ: no&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#option&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 将当前的 UTC 时间写入硬件时钟&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">timedatectl set-local-rtc &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重启依赖于系统时间的服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart rsyslog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart crond
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4关闭防火墙服务">4、关闭防火墙服务&lt;/h3>
&lt;p>关闭防火墙，并禁止开启启动；顺便清理一下规则。&lt;/p>
&lt;p>注意：因为是测试环境，为了&lt;strong>方便、简单&lt;/strong>，直接关闭；但最好&lt;strong>不要关闭&lt;/strong>，通过操作防火墙，让固定流量放行即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">systemctl stop firewalld &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl disable firewalld
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -F &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> iptables -X &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> iptables -F -t nat &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> iptables -X -t nat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果各个主机启用了防火墙策略，需要开放Kubernetes各个组件所需要的端口，可以查看&lt;a href="https://kubernetes.io/docs/setup/independent/install-kubeadm/">Installing kubeadm&lt;/a>中的&amp;quot;Check required ports&amp;quot;一节开放相关端口或者关闭主机的防火墙&lt;/p>
&lt;/blockquote>
&lt;h3 id="5关闭并禁用selinux">5、关闭并禁用SELinux&lt;/h3>
&lt;p>关闭SELinux，并编辑 /etc/sysconfig selinux 文件，以彻底禁用 SELinux&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ setenforce &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sed -i &lt;span class="s1">&amp;#39;s/^SELINUX=enforcing$/SELINUX=disabled/&amp;#39;&lt;/span> /etc/selinux/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 或者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sed -i &lt;span class="s1">&amp;#39;s/^SELINUX=.*/SELINUX=disabled/&amp;#39;&lt;/span> /etc/selinux/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看selinux状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ getenforce
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6禁用-swap-设备">6、禁用 Swap 设备&lt;/h3>
&lt;p>关闭当前已启用的所有 Swap 设备：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ swapoff -a &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sysctl -w vm.swappiness&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑 fstab 配置文件，注释掉标识为 Swap 设备的所有行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ vi /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#/dev/mapper/centos-swap swap swap defaults 0 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 或者&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sed -i &lt;span class="s1">&amp;#39;/ swap / s/^\(.*\)$/#\1/g&amp;#39;&lt;/span> /etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="7设置内核网络模块参数">7、设置内核网络模块参数&lt;/h3>
&lt;p>加载netfilter模块：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cat&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">EOF&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">modules&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">load&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">k8s&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">modules&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">br_netfilter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行以下命令使模块生效:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#挂载 br_netfilter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe br_netfilter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置内核参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt; /etc/sysctl.d/k8s.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_slow_start_after_idle=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.rmem_max=16777216
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.inotify.max_user_watches=1048576
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.softlockup_all_cpu_backtrace=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.softlockup_panic=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.file-max=2097152
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.nr_open=2097152
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.inotify.max_user_instances=8192
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.inotify.max_queued_events=16384
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">vm.max_map_count=262144
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.netdev_max_backlog=16384
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_wmem=4096 12582912 16777216
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.wmem_max=16777216
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.somaxconn=32768
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.ip_forward=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_max_syn_backlog=8096
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.bridge.bridge-nf-call-iptables=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.bridge.bridge-nf-call-ip6tables=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.bridge.bridge-nf-call-arptables=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_rmem=4096 12582912 16777216
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">vm.swappiness=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.sysrq=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.neigh.default.gc_stale_time=120
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.all.rp_filter=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.default.rp_filter=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.default.arp_announce=2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.lo.arp_announce=2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.all.arp_announce=2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_max_tw_buckets=5000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_syncookies=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_synack_retries=2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv6.conf.lo.disable_ipv6=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv6.conf.all.disable_ipv6=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv6.conf.default.disable_ipv6=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv6.conf.all.forwarding=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.ip_local_port_range=1024 65535
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_keepalive_time=600
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_keepalive_probes=10
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_keepalive_intvl=30
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.nf_conntrack_max=25000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_max=25000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_tcp_timeout_established=180
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_tcp_timeout_time_wait=120
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_tcp_timeout_close_wait=60
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_tcp_timeout_fin_wait=12
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_timestamps=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_orphan_retries=3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.pid_max=4194303
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_tw_reuse=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_fin_timeout=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">vm.min_free_kbytes=262144
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.msgmnb=65535
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.msgmax=65535
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.shmmax=68719476736
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.shmall=4294967296
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kernel.core_uses_pid=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.neigh.default.gc_thresh1=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.neigh.default.gc_thresh2=4096
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.neigh.default.gc_thresh3=8192
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.netfilter.nf_conntrack_tcp_timeout_close=3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.conf.all.route_localnet=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>注意：关闭 tcp_tw_recycle，否则与 NAT 冲突，可能导致服务不通；
内核低于4版本添加 fs.may_detach_mounts=1&lt;/p>
&lt;/blockquote>
&lt;p>使配置生效：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#使配置生效&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sysctl -p /etc/sysctl.d/k8s.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#查看是否生成相关文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ls /proc/sys/net/bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="8设置内核-ipvs-模块">8、设置内核 IPVS 模块&lt;/h3>
&lt;p>由于ipvs已经加入到了内核的主干，所以为kube-proxy开启ipvs的前提需要加载以下的内核模块：&lt;/p>
&lt;ul>
&lt;li>ip_vs&lt;/li>
&lt;li>ip_vs_rr&lt;/li>
&lt;li>ip_vs_wrr&lt;/li>
&lt;li>ip_vs_sh&lt;/li>
&lt;li>nf_conntrack_ipv4 （内核4版本以上 nf_conntrack 替换 nf_conntrack_ipv4）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ cat &amp;gt; /etc/sysconfig/modules/ipvs.modules &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">modprobe -- ip_vs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">modprobe -- ip_vs_rr
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">modprobe -- ip_vs_wrr
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">modprobe -- ip_vs_sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">modprobe -- nf_conntrack_ipv4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行脚本并查看是否正常加载内核模块：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#修改脚本权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">755&lt;/span> /etc/sysconfig/modules/ipvs.modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#执行脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ bash /etc/sysconfig/modules/ipvs.modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#查看是否已经正确加载所需的内核模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ lsmod &lt;span class="p">|&lt;/span> grep -e ip_vs -e nf_conntrack_ipv4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>注：上面脚本创建了的&lt;code>/etc/sysconfig/modules/ipvs.modules&lt;/code>文件，保证在节点重启后能自动加载所需模块。 使用&lt;code>lsmod | grep -e ip_vs -e nf_conntrack_ipv4&lt;/code>命令查看是否已经正确加载所需的内核模块。&lt;/p>
&lt;/blockquote>
&lt;p>接下来还需要确保各个节点上已经安装了ipset软件包，为了便于查看ipvs的代理规则，最好安装一下管理工具ipvsadm。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ yum install -y ipset ipvsadm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果以上前提条件如果不满足，则即使kube-proxy的配置开启了ipvs模式，也会退回到iptables模式&lt;/p>
&lt;/blockquote>
&lt;h3 id="9配置资源限制">9、配置资源限制&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* soft nofile 655360&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* hard nofile 655360&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* soft nproc 655360&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* hard nproc 655360&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* soft memlock unlimited&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;* hard memlock unlimited&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/security/limits.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>centos7还需修改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s/4096/655350/&amp;#39;&lt;/span> /etc/security/limits.d/20-nproc.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="10安装依赖包以及相关工具">10、安装依赖包以及相关工具&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ yum install -y epel-release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim ntpdate libseccomp libtool-ltdl chrony conntrack jq iptables curl sysstat libseccomp wget socat git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="三规划">三、规划&lt;/h2>
&lt;blockquote>
&lt;p>先安装kubeadm(跳到第四步)，初步查看本次安装的kubernetes各个组件的版本&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 例如：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubeadm config images list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I0516 11:23:19.087877 &lt;span class="m">1340&lt;/span> version.go:255&lt;span class="o">]&lt;/span> remote version is much newer: v1.24.0&lt;span class="p">;&lt;/span> falling back to: stable-1.23
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/kube-apiserver:v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/kube-controller-manager:v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/kube-scheduler:v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/kube-proxy:v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/pause:3.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/etcd:3.5.1-0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">k8s.gcr.io/coredns/coredns:v1.8.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="四系统环境">四、系统环境&lt;/h2>
&lt;ul>
&lt;li>CentOS 版本：7.7&lt;/li>
&lt;li>Docker 版本：18.09.9-3&lt;/li>
&lt;li>Calico 版本：v3.10&lt;/li>
&lt;li>Kubernetes 版本：1.16.3&lt;/li>
&lt;li>Kubernetes Newwork 模式：IPVS&lt;/li>
&lt;li>Kubernetes Dashboard 版本：dashboard:v2.0.0-beta6&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>地址&lt;/th>
&lt;th>主机名&lt;/th>
&lt;th>内存&amp;amp;CPU&lt;/th>
&lt;th>角色&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>192.168.2.11&lt;/td>
&lt;td>k8s-master&lt;/td>
&lt;td>2C &amp;amp; 2G&lt;/td>
&lt;td>master&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>192.168.2.12&lt;/td>
&lt;td>k8s-node-01&lt;/td>
&lt;td>4c &amp;amp; 8G&lt;/td>
&lt;td>node&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>192.168.2.13&lt;/td>
&lt;td>k8s-node-02&lt;/td>
&lt;td>4c &amp;amp; 8G&lt;/td>
&lt;td>node&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="五安装docker全部节点">五、安装Docker（全部节点）&lt;/h2>
&lt;h3 id="1移除之前安装过的docker">1、移除之前安装过的Docker&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ sudo yum -y remove docker &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-client &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-client-latest &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-common &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-latest &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-latest-logrotate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-logrotate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-selinux &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-engine-selinux &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-ce-cli &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker-engine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看还有没有存在的 Docker 组件，一定要确保删除干净：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ rpm -qa &lt;span class="p">|&lt;/span> grep docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>有则通过命令 yum -y remove XXX 来删除，比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ yum remove docker-ce-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2更换-docker-的-yum-源">2、更换 Docker 的 yum 源&lt;/h3>
&lt;p>由于官方下载速度比较慢，所以需要更改 Docker 安装的 yum 源，这里推荐用阿里镜像源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3显示-docker-所有可安装版本">3、显示 docker 所有可安装版本：&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> sudo yum list docker-ce --showduplicates &lt;span class="p">|&lt;/span>sort -r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * updates: mirrors.aliyun.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Loading mirror speeds from cached hostfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Loaded plugins: fastestmirror
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Installed Packages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * extras: mirrors.aliyun.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.9-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.8-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.7-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.6-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.5-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.4-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.3-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.2-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.16-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.15-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.14-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.1-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.13-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.12-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.11-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.10-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-ce.x86_64 3:20.10.0-3.el7 docker-ce-stable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4安装指定版本-docker">4、安装指定版本 docker&lt;/h3>
&lt;blockquote>
&lt;p>注意：安装前&lt;strong>一定要&lt;/strong>提前查询将要安装的 Kubernetes 版本是否和 Docker 版本对应。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ yum install -y docker-ce-18.09.9-3.el7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>设置镜像存储目录，找到大点的挂载的目录进行存储&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ vi /lib/systemd/system/docker.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#找到这行，往后面加上存储目录，例如这里是 --graph /apps/docker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>/usr/bin/docker --graph /apps/docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5配置-docker-参数和镜像加速器">5、配置 Docker 参数和镜像加速器&lt;/h3>
&lt;p>Kubernetes 推荐的一些 Docker 配置参数，这里配置一下。还有就是由于国内访问 Docker 仓库速度很慢，所以国内几家云厂商推出镜像加速下载的代理加速器，这里也需要配置一下。&lt;/p>
&lt;p>创建 Docker 配置文件的目录并添加配置文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ mkdir -p /etc/docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat &amp;gt; /etc/docker/daemon.json &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;registry-mirrors&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;https://dockerhub.azk8s.cn&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;http://hub-mirror.c.163.com&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;https://registry.docker-cn.com&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;storage-opts&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;overlay2.override_kernel_check=true&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;log-opts&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;max-file&amp;#34;:&amp;#34;5&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6启动-docker-并设置-docker-开机启动">6、启动 docker 并设置 docker 开机启动&lt;/h3>
&lt;p>启动 Docker：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ systemctl start docker &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl &lt;span class="nb">enable&lt;/span> docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果 Docker 已经启动，则需要重启 Docker：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ systemctl daemon-reload &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl restart docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="六安装-kubeletkubectlkubeadm全部节点">六、安装 kubelet、kubectl、kubeadm（全部节点）&lt;/h2>
&lt;h3 id="1配置可用的国内-yum-源">1、配置可用的国内 yum 源&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[kubernetes]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">name=Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">enabled=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">gpgcheck=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">repo_gpgcheck=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2安装-kubeletkubectlkubeadm">2、安装 kubelet、kubectl、kubeadm&lt;/h3>
&lt;ul>
&lt;li>kubelet: 在集群中的每个节点上用来启动 pod 和 container 等。&lt;/li>
&lt;li>kubectl: 用来与集群通信的命令行工具。&lt;/li>
&lt;li>kubeadm: 用来初始化集群的指令。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>注意安装顺序，一定不要先安装 kubeadm，因为 kubeadm 会自动安装最新版本的 kubelet 与 kubectl，导致版本不一致问题。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#安装 kubelet&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum install -y kubelet-1.16.3-0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#安装 kubectl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum install -y kubectl-1.16.3-0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#安装 kubeadm&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum install -y kubeadm-1.16.3-0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3启动-kubelet-并配置开机启动">3、启动 kubelet 并配置开机启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ systemctl start kubelet &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl &lt;span class="nb">enable&lt;/span> kubelet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>检查状态时会发现 kubelet 是 failed 状态，等初 master 节点初始化完成后即可显示正常。&lt;/p>
&lt;/blockquote>
&lt;h2 id="七kubeadm-安装-kubernetesmaster-节点">七、kubeadm 安装 kubernetes（Master 节点）&lt;/h2>
&lt;p>创建 kubeadm 配置文件 kubeadm-config.yaml，然后需要配置一些参数：&lt;/p>
&lt;ul>
&lt;li>配置 localAPIEndpoint.advertiseAddress 参数，调整为你的 Master 服务器地址。&lt;/li>
&lt;li>配置 imageRepository 参数，调整 kubernetes 镜像下载地址为阿里云。&lt;/li>
&lt;li>配置 networking.podSubnet 参数，调整为你要设置的网络范围。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>kubeadm-config.yaml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ cat &amp;gt; kubeadm-config.yaml &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: kubeadm.k8s.io/v1beta2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: InitConfiguration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">localAPIEndpoint:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> advertiseAddress: 192.168.2.11
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> bindPort: 6443
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">nodeRegistration:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> taints:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> - effect: PreferNoSchedule
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> key: node-role.kubernetes.io/master
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: kubeadm.k8s.io/v1beta2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: ClusterConfiguration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">imageRepository: registry.aliyuncs.com/google_containers
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kubernetesVersion: v1.16.3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">networking:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> podSubnet: 10.244.0.0/16
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> serviceSubnet: 10.96.0.0/12
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">apiVersion: kubeproxy.config.k8s.io/v1alpha1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">kind: KubeProxyConfiguration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">mode: ipvs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>kubeadm 初始化 kubernetes 集群：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ kubeadm init --config kubeadm-config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>部署日志信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>init&lt;span class="o">]&lt;/span> Using Kubernetes version: v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>preflight&lt;span class="o">]&lt;/span> Running pre-flight checks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>WARNING Firewalld&lt;span class="o">]&lt;/span>: firewalld is active, please ensure ports &lt;span class="o">[&lt;/span>&lt;span class="m">6443&lt;/span> 10250&lt;span class="o">]&lt;/span> are open or your cluster rrectly &lt;span class="k">function&lt;/span> co&lt;span class="o">[&lt;/span>preflight&lt;span class="o">]&lt;/span> Pulling images required &lt;span class="k">for&lt;/span> setting up a Kubernetes cluster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>preflight&lt;span class="o">]&lt;/span> This might take a minute or two, depending on the speed of your internet connection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>preflight&lt;span class="o">]&lt;/span> You can also perform this action in beforehand using &lt;span class="s1">&amp;#39;kubeadm config images pull&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Using certificateDir folder &lt;span class="s2">&amp;#34;/etc/kubernetes/pki&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;ca&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;apiserver&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> apiserver serving cert is signed &lt;span class="k">for&lt;/span> DNS names &lt;span class="o">[&lt;/span>kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master01&lt;span class="o">]&lt;/span> and IPs &lt;span class="o">[&lt;/span>10.96.0.1 172.21.51.20&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;apiserver-kubelet-client&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;front-proxy-ca&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;front-proxy-client&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;etcd/ca&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;etcd/server&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> etcd/server serving cert is signed &lt;span class="k">for&lt;/span> DNS names &lt;span class="o">[&lt;/span>localhost master01&lt;span class="o">]&lt;/span> and IPs &lt;span class="o">[&lt;/span>172.21.51.20 127.0.0.1 ::1&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;etcd/peer&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> etcd/peer serving cert is signed &lt;span class="k">for&lt;/span> DNS names &lt;span class="o">[&lt;/span>localhost master01&lt;span class="o">]&lt;/span> and IPs &lt;span class="o">[&lt;/span>172.21.51.20 127.0.0.1 ::1&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;etcd/healthcheck-client&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;apiserver-etcd-client&amp;#34;&lt;/span> certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>certs&lt;span class="o">]&lt;/span> Generating &lt;span class="s2">&amp;#34;sa&amp;#34;&lt;/span> key and public key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubeconfig&lt;span class="o">]&lt;/span> Using kubeconfig folder &lt;span class="s2">&amp;#34;/etc/kubernetes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubeconfig&lt;span class="o">]&lt;/span> Writing &lt;span class="s2">&amp;#34;admin.conf&amp;#34;&lt;/span> kubeconfig file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubeconfig&lt;span class="o">]&lt;/span> Writing &lt;span class="s2">&amp;#34;kubelet.conf&amp;#34;&lt;/span> kubeconfig file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubeconfig&lt;span class="o">]&lt;/span> Writing &lt;span class="s2">&amp;#34;controller-manager.conf&amp;#34;&lt;/span> kubeconfig file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubeconfig&lt;span class="o">]&lt;/span> Writing &lt;span class="s2">&amp;#34;scheduler.conf&amp;#34;&lt;/span> kubeconfig file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubelet-start&lt;span class="o">]&lt;/span> Writing kubelet environment file with flags to file &lt;span class="s2">&amp;#34;/var/lib/kubelet/kubeadm-flags.env&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubelet-start&lt;span class="o">]&lt;/span> Writing kubelet configuration to file &lt;span class="s2">&amp;#34;/var/lib/kubelet/config.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubelet-start&lt;span class="o">]&lt;/span> Starting the kubelet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>control-plane&lt;span class="o">]&lt;/span> Using manifest folder &lt;span class="s2">&amp;#34;/etc/kubernetes/manifests&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>control-plane&lt;span class="o">]&lt;/span> Creating static Pod manifest &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;kube-apiserver&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>control-plane&lt;span class="o">]&lt;/span> Creating static Pod manifest &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;kube-controller-manager&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>control-plane&lt;span class="o">]&lt;/span> Creating static Pod manifest &lt;span class="k">for&lt;/span> &lt;span class="s2">&amp;#34;kube-scheduler&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>etcd&lt;span class="o">]&lt;/span> Creating static Pod manifest &lt;span class="k">for&lt;/span> &lt;span class="nb">local&lt;/span> etcd in &lt;span class="s2">&amp;#34;/etc/kubernetes/manifests&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>wait-control-plane&lt;span class="o">]&lt;/span> Waiting &lt;span class="k">for&lt;/span> the kubelet to boot up the control plane as static Pods from directory &lt;span class="s2">&amp;#34;/etc/kubernetes/manifests&amp;#34;&lt;/span>. This can take up to 4m0s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>apiclient&lt;span class="o">]&lt;/span> All control plane components are healthy after 8.504005 seconds
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>upload-config&lt;span class="o">]&lt;/span> Storing the configuration used in ConfigMap &lt;span class="s2">&amp;#34;kubeadm-config&amp;#34;&lt;/span> in the &lt;span class="s2">&amp;#34;kube-system&amp;#34;&lt;/span> Namespace
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubelet&lt;span class="o">]&lt;/span> Creating a ConfigMap &lt;span class="s2">&amp;#34;kubelet-config-1.23&amp;#34;&lt;/span> in namespace kube-system with the configuration &lt;span class="k">for&lt;/span> the kubelets in the cluster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NOTE: The &lt;span class="s2">&amp;#34;kubelet-config-1.23&amp;#34;&lt;/span> naming of the kubelet ConfigMap is deprecated. Once the UnversionedKubeletConfigMap feature gate graduates to Beta the default name will become just &lt;span class="s2">&amp;#34;kubelet-config&amp;#34;&lt;/span>. Kubeadm upgrade will handle this transition transparently.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>upload-certs&lt;span class="o">]&lt;/span> Skipping phase. Please see --upload-certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>mark-control-plane&lt;span class="o">]&lt;/span> Marking the node master01 as control-plane by adding the labels: &lt;span class="o">[&lt;/span>node-role.kubernetes.io/master&lt;span class="o">(&lt;/span>deprecated&lt;span class="o">)&lt;/span> node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>mark-control-plane&lt;span class="o">]&lt;/span> Marking the node master01 as control-plane by adding the taints &lt;span class="o">[&lt;/span>node-role.kubernetes.io/master:NoSchedule&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> Using token: tqtgb2.yr26dau6tm617rgy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> configured RBAC rules to allow Node Bootstrap tokens to get nodes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order &lt;span class="k">for&lt;/span> nodes to get long term certificate credentials
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> configured RBAC rules to allow certificate rotation &lt;span class="k">for&lt;/span> all node client certificates in the cluster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>bootstrap-token&lt;span class="o">]&lt;/span> Creating the &lt;span class="s2">&amp;#34;cluster-info&amp;#34;&lt;/span> ConfigMap in the &lt;span class="s2">&amp;#34;kube-public&amp;#34;&lt;/span> namespace
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>kubelet-finalize&lt;span class="o">]&lt;/span> Updating &lt;span class="s2">&amp;#34;/etc/kubernetes/kubelet.conf&amp;#34;&lt;/span> to point to a rotatable kubelet client certificate and key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>addons&lt;span class="o">]&lt;/span> Applied essential addon: CoreDNS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>addons&lt;span class="o">]&lt;/span> Applied essential addon: kube-proxy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your Kubernetes control-plane has initialized successfully!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To start using your cluster, you need to run the following as a regular user:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir -p &lt;span class="nv">$HOME&lt;/span>/.kube
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo cp -i /etc/kubernetes/admin.conf &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo chown &lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span>:&lt;span class="k">$(&lt;/span>id -g&lt;span class="k">)&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Alternatively, &lt;span class="k">if&lt;/span> you are the root user, you can run:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">export&lt;/span> &lt;span class="nv">KUBECONFIG&lt;/span>&lt;span class="o">=&lt;/span>/etc/kubernetes/admin.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You should now deploy a pod network to the cluster.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Run &lt;span class="s2">&amp;#34;kubectl apply -f [podnetwork].yaml&amp;#34;&lt;/span> with one of the options listed at:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> https://kubernetes.io/docs/concepts/cluster-administration/addons/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Then you can join any number of worker nodes by running the following on each as root:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubeadm join 192.168.2.11:6443 --token tqtgb2.yr26dau6tm617rgy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --discovery-token-ca-cert-hash sha256:c38fa7ed7a99fe928980b4a9dc1df31f26ae60547dfd6599c055ca652f7ad985
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在此处看日志可以知道，可以通过下面命令，添加 kubernetes 相关环境变量：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mkdir -p &lt;span class="nv">$HOME&lt;/span>/.kube
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo cp -i /etc/kubernetes/admin.conf &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo chown &lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span>:&lt;span class="k">$(&lt;/span>id -g&lt;span class="k">)&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="八工作节点加入集群work-node-节点">八、工作节点加入集群（Work Node 节点）&lt;/h2>
&lt;p>根据上面 Master 节点创建 Kubernetes 集群时的日志信息，可以知道在各个节点上执行下面命令来让工作节点加入主节点：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ kubeadm join 192.168.2.11:6443 --token 4udy8a.f77ai0zun477kx0p &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --discovery-token-ca-cert-hash sha256:4645472f24b438e0ecf5964b6dcd64913f68e0f9f7458768cfb96a9ab16b4212
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果上面 token 过期，则可以通过 &lt;code>kubeadm token create --print-join-command&lt;/code> 命令重新获取加入集群的指令。&lt;/p>
&lt;h2 id="九部署网络插件master-节点">九、部署网络插件（Master 节点）&lt;/h2>
&lt;p>Kubernetes 中可以部署很多种网络插件，不过比较流行也推荐的有两种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Flannel：&lt;/strong> Flannel 是基于 Overlay 网络模型的网络插件，能够方便部署，一般部署后只要不出问题，一般不需要管它。&lt;/li>
&lt;li>&lt;strong>Calico：&lt;/strong> 与 Flannel 不同，Calico 是一个三层的数据中心网络方案，使用 BGP 路由协议在主机之间路由数据包，可以灵活配置网络策略。&lt;/li>
&lt;/ul>
&lt;p>这两种网络根据环境任选其一即可，这里使用的是 Calico，可以按下面步骤部署：&lt;/p>
&lt;h3 id="1部署-calico-网络插件">1、部署 Calico 网络插件&lt;/h3>
&lt;p>下载 Calico 部署文件，并替换里面的网络范围为上面 kubeadm 中 networking.podSubnet 配置的值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#下载 calico 部署文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ wget https://docs.projectcalico.org/v3.10/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#替换 calico 部署文件的 IP 为 kubeadm 中的 networking.podSubnet 参数 10.244.0.0。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sed -i &lt;span class="s1">&amp;#39;s/192.168.0.0/10.244.0.0/g&amp;#39;&lt;/span> calico.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#部署 Calico 插件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ kubectl apply -f calico.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看一下calico向k8s中添加的api资源:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl api-resources &lt;span class="p">|&lt;/span> grep calico
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bgpconfigurations crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> BGPConfiguration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bgppeers crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> BGPPeer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">blockaffinities crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> BlockAffinity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">caliconodestatuses crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> CalicoNodeStatus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clusterinformations crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> ClusterInformation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">felixconfigurations crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> FelixConfiguration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">globalnetworkpolicies crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> GlobalNetworkPolicy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">globalnetworksets crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> GlobalNetworkSet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hostendpoints crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> HostEndpoint
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ipamblocks crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> IPAMBlock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ipamconfigs crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> IPAMConfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ipamhandles crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> IPAMHandle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ippools crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> IPPool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ipreservations crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> IPReservation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubecontrollersconfigurations crd.projectcalico.org/v1 &lt;span class="nb">false&lt;/span> KubeControllersConfiguration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">networkpolicies crd.projectcalico.org/v1 &lt;span class="nb">true&lt;/span> NetworkPolicy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">networksets crd.projectcalico.org/v1 &lt;span class="nb">true&lt;/span> NetworkSet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这些api资源是属于calico的，因此不建议使用kubectl来管理，推荐按照calicoctl来管理这些api资源。 将calicoctl安装为kubectl的插件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -o kubectl-calico -O -L &lt;span class="s2">&amp;#34;https://github.com/projectcalico/calicoctl/releases/download/v3.21.2/calicoctl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x kubectl-calico
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>验证插件正常工作:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl calico -h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2查看-pod-是否成功启动">2、查看 Pod 是否成功启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ kubectl get pod -n kube-system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">calico-kube-controllers-6b64bcd855-jn8pz 1/1 Running &lt;span class="m">0&lt;/span> 2m40s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">calico-node-5wssd 1/1 Running &lt;span class="m">0&lt;/span> 2m40s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">calico-node-7tw94 1/1 Running &lt;span class="m">0&lt;/span> 2m40s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">calico-node-xzfp4 1/1 Running &lt;span class="m">0&lt;/span> 2m40s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">coredns-58cc8c89f4-hv4fn 1/1 Running &lt;span class="m">0&lt;/span> 21m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">coredns-58cc8c89f4-k97x6 1/1 Running &lt;span class="m">0&lt;/span> 21m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">etcd-k8s-master 1/1 Running &lt;span class="m">0&lt;/span> 20m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-apiserver-k8s-master 1/1 Running &lt;span class="m">0&lt;/span> 20m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-controller-manager-k8s-master 1/1 Running &lt;span class="m">0&lt;/span> 20m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-9dlpz 1/1 Running &lt;span class="m">0&lt;/span> 14m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-krd5n 1/1 Running &lt;span class="m">0&lt;/span> 14m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-tntpr 1/1 Running &lt;span class="m">0&lt;/span> 21m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-scheduler-k8s-master 1/1 Running &lt;span class="m">0&lt;/span> 20m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到所以 Pod 都已经成功启动。&lt;/p>
&lt;h2 id="3验证k8s-dns是否可用">3、验证k8s DNS是否可用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl run curl --image&lt;span class="o">=&lt;/span>radial/busyboxplus:curl -it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">If you don&lt;span class="err">&amp;#39;&lt;/span>t see a &lt;span class="nb">command&lt;/span> prompt, try pressing enter.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span> root@curl:/ &lt;span class="o">]&lt;/span>$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>进入后执行&lt;code>nslookup kubernetes.default&lt;/code>确认解析正常:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">nslookup kubernetes.default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Server: 10.96.0.10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Name: kubernetes.default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="十查看是否开启-ipvsmaster-节点">十、查看是否开启 IPVS（Master 节点）&lt;/h2>
&lt;p>上面全部组件都已经部署完成，不过还需要确认是否成功将网络模式设置为 IPVS，可以查看 kube-proxy 日志，在日志信息中查找是否存在 IPVS 关键字信息来确认。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ kubectl get pod -n kube-system &lt;span class="p">|&lt;/span> grep kube-proxy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-9dlpz 1/1 Running &lt;span class="m">0&lt;/span> 42m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-krd5n 1/1 Running &lt;span class="m">0&lt;/span> 42m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kube-proxy-tntpr 1/1 Running &lt;span class="m">0&lt;/span> 49m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>选择其中一个 Pod ，查看该 Pod 中的日志信息中是否存在 ipvs 信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ kubectl logs kube-proxy-9dlpz -n kube-system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.357178 1 node.go:135] Successfully retrieved node IP: 192.168.2.13
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.357265 1 server_others.go:176] Using ipvs Proxier.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">W1120 18:13:46.358005 1 proxier.go:420] IPVS scheduler not specified, use rr by default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.358919 1 server.go:529] Version: v1.16.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359327 1 conntrack.go:100] Set sysctl &amp;#39;net/netfilter/nf_conntrack_max&amp;#39; to 131072
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359379 1 conntrack.go:52] Setting nf_conntrack_max to 131072
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359426 1 conntrack.go:100] Set sysctl &amp;#39;net/netfilter/nf_conntrack_tcp_timeout_established&amp;#39; to 86400
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359452 1 conntrack.go:100] Set sysctl &amp;#39;net/netfilter/nf_conntrack_tcp_timeout_close_wait&amp;#39; to 3600
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359626 1 config.go:313] Starting service config controller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359685 1 shared_informer.go:197] Waiting for caches to sync for service config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359833 1 config.go:131] Starting endpoints config controller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.359889 1 shared_informer.go:197] Waiting for caches to sync for endpoints config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.460013 1 shared_informer.go:204] Caches are synced for service config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I1120 18:13:46.460062 1 shared_informer.go:204] Caches are synced for endpoints config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如上，在日志中查到了 IPVS 字样，则代表使用了 IPVS 模式。&lt;/p>
&lt;h2 id="十一部署周边生态">十一、部署周边生态&lt;/h2>
&lt;h3 id="1安装包管理器helm-3">1、安装包管理器helm 3&lt;/h3>
&lt;p>Helm是Kubernetes的包管理器，后续流程也将使用Helm安装Kubernetes的常用组件。 这里先在master节点node1上按照helm。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-SH" data-lang="SH">&lt;span class="line">&lt;span class="cl">wget https://get.helm.sh/helm-v3.7.2-linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -zxvf helm-v3.7.2-linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv linux-amd64/helm /usr/local/bin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行&lt;code>helm list&lt;/code>确认没有错误输出。&lt;/p>
&lt;p>接下来我们将部署 Kubernetes 的控制看板，由于集群为 1.16.3，所以我们直接使用 Kubernetes Dashboard 2.0.0 版本。&lt;/p>
&lt;p>由于 Dashboard 部署流程也比较多，所以写在另一篇博文中，可以参考 &lt;a href="http://www.mydlq.club/article/28/">Kubernetes 部署 Kubernetes-Dashboard v2.0.0&lt;/a>&lt;/p>
&lt;p>当 Kubernetes Dashboard 部署好了后，输入 Kubernetes 集群任意节点地址配置上面配置的 Service 的 NodePort 30001 来访问看板。输入地址 https://192.168.2.11:30001 进入看板页面，输入上面获取的 Token 串进行验证登录。&lt;/p>
&lt;blockquote>
&lt;p>提醒一下，由于谷歌浏览器访问自签名证书的网址时，可能会被拒绝访问，所以，这里推荐最好使用火狐浏览器访问。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://mydlq-club.oss-cn-beijing.aliyuncs.com/images/kubernetes-kubeadm-install-1002.png?x-oss-process=style/shuiyin" alt="img">&lt;/p>
&lt;h2 id="十配置-kubectl-命令自动补全master-节点">十、配置 Kubectl 命令自动补全（Master 节点）&lt;/h2>
&lt;p>安装补全工具：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ yum install -y bash-completion
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加补全配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ source /usr/share/bash-completion/bash_completion
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ source &amp;lt;(kubectl completion bash)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ echo &amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加完成就可以通过输入 kubectl 后，按补全键（一般为 tab）会自动补全对应的命令。&lt;/p>
&lt;h2 id="九faq">九、FAQ&lt;/h2>
&lt;h3 id="1修正-kubelet-无法读取资源错误">1、修正 kubelet 无法读取资源错误&lt;/h3>
&lt;p>CentOS 系统上安装 Kubernetes 后 kubelet 组件会一直报 &lt;code>failed to get cgroup stats for &amp;quot;/system.slice/docker.service&amp;quot;&lt;/code> 错误，而引起该问题的原因是 kubelet 启动时，会执行节点资源统计，需要 systemd 中开启对应的选项，如下：&lt;/p>
&lt;ul>
&lt;li>CPUAccounting：是否开启该 unit 的 CPU 使用统计，bool 类型，可配置 true 或者 false。&lt;/li>
&lt;li>MemoryAccounting：是否开启该 unit 的 Memory 使用统计，bool 类型，可配置 true 或者 false。&lt;/li>
&lt;/ul>
&lt;p>如果不设置这两项，kubelet 是无法执行该统计命令，导致 kubelet 一致报错误上面错误信息。所以需要修改 systemd 里面的 kubelet 服务配置，操作如下：&lt;/p>
&lt;p>编辑 /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf 文件，并添加下面配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vi /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>Service&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CPUAccounting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="c1">## 添加 CPUAccounting=true 选项，开启 systemd CPU 统计功能&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MemoryAccounting&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="c1">## 添加 MemoryAccounting=true 选项，开启 systemd Memory 统计功能&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">EnvironmentFile&lt;/span>&lt;span class="o">=&lt;/span>-/var/lib/kubelet/kubeadm-flags.env
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">EnvironmentFile&lt;/span>&lt;span class="o">=&lt;/span>-/etc/sysconfig/kubelet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>/usr/bin/kubelet &lt;span class="nv">$KUBELET_KUBECONFIG_ARGS&lt;/span> &lt;span class="nv">$KUBELET_CONFIG_ARGS&lt;/span> &lt;span class="nv">$KUBELET_KUBEADM_ARGS&lt;/span> &lt;span class="nv">$KUBELET_EXTRA_ARGS&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Kubernetes, how to deploy?</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-1/</link><pubDate>Sun, 01 May 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-1/</guid><description>&lt;p>汇总kubernetes部署的方案：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>kubernetes &amp;lt; 1.20 + centos7 + docker + iptables + flannel&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubernetes &amp;lt; 1.20 + centos7 + docker + ipvs + calico&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1.20 &amp;lt;kubernetes &amp;lt; 1.24 + centos7 + docker + ipvs + calico&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubernetes &amp;gt; 1.24 + centos7 + containerd + ipvs + calico&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubernetes &amp;gt; 1.24 + centos7 + cri-o + ipvs + calico&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubernetes &amp;gt; 1.24 + centos7 + cri-dockerd + docker + ipvs + calico&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>flannel vxlan, check sum</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-8/</link><pubDate>Fri, 15 Apr 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-8/</guid><description>&lt;p>集群内pod无法dig mysql.middleware
修改主机dns nameserver为集群core dns地址，主机上可以dig mysql.middleware&lt;/p>
&lt;h2 id="问题分析">问题分析&lt;/h2>
&lt;p>从pod内发出的请求数据包到flannel网卡时出现问题&lt;/p>
&lt;h2 id="抓包分析">抓包分析&lt;/h2>
&lt;ul>
&lt;li>环境&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>地址&lt;/th>
&lt;th>网卡&lt;/th>
&lt;th>flannel地址&lt;/th>
&lt;th>docker0地址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>宿主机&lt;/td>
&lt;td>192.168.189.5&lt;/td>
&lt;td>eth0&lt;/td>
&lt;td>172.30.17.0/32&lt;/td>
&lt;td>172.30.17.0/24&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>宿主机&lt;/td>
&lt;td>192.168.189.3&lt;/td>
&lt;td>eth0&lt;/td>
&lt;td>172.30.44.0/32&lt;/td>
&lt;td>172.30.44.0/24&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>修改192.168.189.5主机的nameserver，主机上，dig mysql.middleware.svc.cluster.local&lt;/p>
&lt;ul>
&lt;li>在192.168.189.3的eth0上抓包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i eth0 -nnvvS udp and host 192.168.189.5 and host 192.168.189.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:00:45.171729 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 25021, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 153&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.37578 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 56488, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 103&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.6570 &amp;gt; 172.30.44.4.53: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> 30379+ &lt;span class="o">[&lt;/span>1au&lt;span class="o">]&lt;/span> A? mysql.middleware.svc.cluster.local. ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span> &lt;span class="o">[&lt;/span>COOKIE 8dd7b1a036b9e96b&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>75&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:00:45.172148 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 11850, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 203&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.3.39446 &amp;gt; 192.168.189.5.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x7427 -&amp;gt; 0x6287!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 61091, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 153&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.6570: &lt;span class="o">[&lt;/span>bad udp cksum 0x95d7 -&amp;gt; 0x8437!&lt;span class="o">]&lt;/span> 30379*- q: A? mysql.middleware.svc.cluster.local. 1/0/1 mysql.middleware.svc.cluster.local. A 10.254.83.174 ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2048&lt;/span> DO &lt;span class="o">[&lt;/span>COOKIE 8dd7b1a036b9e96b&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>125&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在192.168.189.3的flannel.1上抓包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i flannel.1 -nnvvS host 172.30.44.4 or 172.30.44.0 and host 172.30.17.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">172.30.17.0.28706 &amp;gt; 172.30.44.4.53: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> 20554+ &lt;span class="o">[&lt;/span>1au&lt;span class="o">]&lt;/span> A? mysql.middleware.svc.cluster.local. ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span> &lt;span class="o">[&lt;/span>COOKIE 02885f0fcec139cb&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>75&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:14:09.100234 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 25272, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 153&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.28706: &lt;span class="o">[&lt;/span>bad udp cksum 0x95d7 -&amp;gt; 0xcda2!&lt;span class="o">]&lt;/span> 20554*- q: A? mysql.middleware.svc.cluster.local. 1/0/1 mysql.middleware.svc.cluster.local. A 10.254.83.174 ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span> &lt;span class="o">[&lt;/span>COOKIE 02885f0fcec139cb&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>125&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>注意：请求来的时候sum ok，回的时候 bad&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>在192.168.189.5的一个pod内，dig mysql.middleware.svc.cluster.local&lt;/p>
&lt;ul>
&lt;li>在192.168.189.3的eth0上抓包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i eth0 -nnvvS udp and host 192.168.189.5 and host 192.168.189.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:11.021851 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 18100, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 153&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.54947 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x694b -&amp;gt; 0x37cc!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 29991, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 103&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.42230 &amp;gt; 172.30.44.4.53: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> 38007+ &lt;span class="o">[&lt;/span>1au&lt;span class="o">]&lt;/span> A? mysql.middleware.svc.cluster.local. ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1232&lt;/span> &lt;span class="o">[&lt;/span>COOKIE 8313fa6ef3e826cf&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>75&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:16.026185 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 22564, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 153&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.29594 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x3c0a -&amp;gt; 0x9ad5!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 1772, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 103&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.60334 &amp;gt; 172.30.44.4.53: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> 38007+ &lt;span class="o">[&lt;/span>1au&lt;span class="o">]&lt;/span> A? mysql.middleware.svc.cluster.local. ar: . OPT &lt;span class="nv">UDPsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1232&lt;/span> &lt;span class="o">[&lt;/span>COOKIE 8313fa6ef3e826cf&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>75&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:16.115807 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 22619, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 78&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.58541 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:17.139797 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 22876, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 78&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.58541 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:18.163773 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 23179, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 78&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.58541 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在192.168.189.3的flannel.1上抓包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i flannel.1 -nnvvS host 172.30.44.4 or 172.30.44.0 and host 172.30.17.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:16.115829 ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:17.139812 ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:20:18.163795 ARP, Ethernet &lt;span class="o">(&lt;/span>len 6&lt;span class="o">)&lt;/span>, IPv4 &lt;span class="o">(&lt;/span>len 4&lt;span class="o">)&lt;/span>, Request who-has 172.30.44.4 tell 172.30.17.0, length &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>注意：dig的udp请求来的时候sum bad了，似乎被内核网络丢弃了
pod内发送的udp数据包不能正常到达&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>在192.168.189.5的一个pod内，curl 172.30.44.4:53&lt;/p>
&lt;ul>
&lt;li>在192.168.189.3的eth0上抓包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i eth0 -nnvvS udp and host 192.168.189.5 and host 192.168.189.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561653 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 27101, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 110&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.60121 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57662, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 60&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>S&lt;span class="o">]&lt;/span>, cksum 0x3e44 &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049522, win 64860, options &lt;span class="o">[&lt;/span>mss 1410,sackOK,TS val &lt;span class="m">115443102&lt;/span> ecr 0,nop,wscale 7&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561757 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 10781, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 110&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.3.50170 &amp;gt; 192.168.189.5.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x4a95 -&amp;gt; 0x80d1!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 0, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 60&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>S.&lt;span class="o">]&lt;/span>, cksum 0x956f &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xcbab&lt;span class="o">)&lt;/span>, seq 2031558188, ack 1333049523, win 64308, options &lt;span class="o">[&lt;/span>mss 1410,sackOK,TS val &lt;span class="m">3396801268&lt;/span> ecr 115443102,nop,wscale 7&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561993 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 27102, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 102&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.60121 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57663, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0xf37e &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049523, ack 2031558189, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115443103&lt;/span> ecr 3396801268&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.562083 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 27103, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 179&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.60121 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57664, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 129&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>P.&lt;span class="o">]&lt;/span>, cksum 0x9dd2 &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049523:1333049600, ack 2031558189, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115443103&lt;/span> ecr 3396801268&lt;span class="o">]&lt;/span>, length &lt;span class="m">77&lt;/span> &lt;span class="o">[&lt;/span>prefix length&lt;span class="o">(&lt;/span>18245&lt;span class="o">)&lt;/span> !&lt;span class="o">=&lt;/span> length&lt;span class="o">(&lt;/span>75&lt;span class="o">)]&lt;/span> &lt;span class="o">(&lt;/span>invalid&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.562109 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 10782, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 102&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.3.50170 &amp;gt; 192.168.189.5.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x4a9d -&amp;gt; 0xa86b!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4244, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xf335&lt;span class="o">)&lt;/span>, seq 2031558189, ack 1333049600, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396801269&lt;/span> ecr 115443103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562312 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 12090, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 102&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.3.50170 &amp;gt; 192.168.189.5.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x4a9d -&amp;gt; 0xa09a!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4245, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>F.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xeb64&lt;span class="o">)&lt;/span>, seq 2031558189, ack 1333049600, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396803269&lt;/span> ecr 115443103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562435 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 28447, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 102&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.5.60121 &amp;gt; 192.168.189.3.8472: &lt;span class="o">[&lt;/span>udp sum ok&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57665, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>F.&lt;span class="o">]&lt;/span>, cksum 0xe38e &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049600, ack 2031558190, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115445103&lt;/span> ecr 3396803269&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562519 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 64, id 12091, offset 0, flags &lt;span class="o">[&lt;/span>none&lt;span class="o">]&lt;/span>, proto UDP &lt;span class="o">(&lt;/span>17&lt;span class="o">)&lt;/span>, length 102&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 192.168.189.3.50170 &amp;gt; 192.168.189.5.8472: &lt;span class="o">[&lt;/span>bad udp cksum 0x4a9d -&amp;gt; 0x98c9!&lt;span class="o">]&lt;/span> OTV, flags &lt;span class="o">[&lt;/span>I&lt;span class="o">]&lt;/span> &lt;span class="o">(&lt;/span>0x08&lt;span class="o">)&lt;/span>, overlay 0, instance &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4246, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xe393&lt;span class="o">)&lt;/span>, seq 2031558190, ack 1333049601, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396803269&lt;/span> ecr 115445103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在192.168.189.3的flannel.1上抓包&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tcpdump -i flannel.1 -nnvvS host 172.30.44.4 or 172.30.44.0 and host 172.30.17.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">三次握手
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561678 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57662, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 60&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>S&lt;span class="o">]&lt;/span>, cksum 0x3e44 &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049522, win 64860, options &lt;span class="o">[&lt;/span>mss 1410,sackOK,TS val &lt;span class="m">115443102&lt;/span> ecr 0,nop,wscale 7&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561744 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 0, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 60&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>S.&lt;span class="o">]&lt;/span>, cksum 0x956f &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xcbab&lt;span class="o">)&lt;/span>, seq 2031558188, ack 1333049523, win 64308, options &lt;span class="o">[&lt;/span>mss 1410,sackOK,TS val &lt;span class="m">3396801268&lt;/span> ecr 115443102,nop,wscale 7&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.561998 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57663, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0xf37e &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049523, ack 2031558189, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115443103&lt;/span> ecr 3396801268&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">四次挥手
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.562088 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57664, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 129&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>P.&lt;span class="o">]&lt;/span>, cksum 0x9dd2 &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049523:1333049600, ack 2031558189, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115443103&lt;/span> ecr 3396801268&lt;span class="o">]&lt;/span>, length &lt;span class="m">77&lt;/span> &lt;span class="o">[&lt;/span>prefix length&lt;span class="o">(&lt;/span>18245&lt;span class="o">)&lt;/span> !&lt;span class="o">=&lt;/span> length&lt;span class="o">(&lt;/span>75&lt;span class="o">)]&lt;/span> &lt;span class="o">(&lt;/span>invalid&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:36.562105 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4244, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xf335&lt;span class="o">)&lt;/span>, seq 2031558189, ack 1333049600, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396801269&lt;/span> ecr 115443103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562279 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4245, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>F.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xeb64&lt;span class="o">)&lt;/span>, seq 2031558189, ack 1333049600, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396803269&lt;/span> ecr 115443103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562447 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 57665, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.17.0.57972 &amp;gt; 172.30.44.4.53: Flags &lt;span class="o">[&lt;/span>F.&lt;span class="o">]&lt;/span>, cksum 0xe38e &lt;span class="o">(&lt;/span>correct&lt;span class="o">)&lt;/span>, seq 1333049600, ack 2031558190, win 507, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">115445103&lt;/span> ecr 3396803269&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10:25:38.562512 IP &lt;span class="o">(&lt;/span>tos 0x0, ttl 63, id 4246, offset 0, flags &lt;span class="o">[&lt;/span>DF&lt;span class="o">]&lt;/span>, proto TCP &lt;span class="o">(&lt;/span>6&lt;span class="o">)&lt;/span>, length 52&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 172.30.44.4.53 &amp;gt; 172.30.17.0.57972: Flags &lt;span class="o">[&lt;/span>.&lt;span class="o">]&lt;/span>, cksum 0x9567 &lt;span class="o">(&lt;/span>incorrect -&amp;gt; 0xe393&lt;span class="o">)&lt;/span>, seq 2031558190, ack 1333049601, win 502, options &lt;span class="o">[&lt;/span>nop,nop,TS val &lt;span class="m">3396803269&lt;/span> ecr 115445103&lt;span class="o">]&lt;/span>, length &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>pod内发送的tcp数据包可以正常发送&lt;/li>
&lt;/ul>
&lt;h2 id="解决方案关闭外层udp数据包检测">解决方案，关闭外层udp数据包检测&lt;/h2>
&lt;p>要在Linux中设置网卡或内核参数以允许数据包不进行校验和计算，可以使用ethtool工具或sysctl进行配置。&lt;/p>
&lt;h3 id="使用ethtool工具">使用ethtool工具&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>首先，确保你已经安装了ethtool工具。如果没有安装，可以通过包管理器进行安装，比如在Ubuntu上可以使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install ethtool
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>然后，使用ethtool来设置网卡参数。例如，要禁用网卡的校验和计算，可以使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo ethtool -K eth0 tx off rx off
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这将禁用eth0网卡的发送和接收校验和计算。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="使用sysctl设置内核参数">使用sysctl设置内核参数&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>打开文件&lt;code>/etc/sysctl.conf&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在文件末尾添加以下行以禁用校验和：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_checksum &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>保存并关闭文件后，执行以下命令使更改生效：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo sysctl -p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>The node was low on resource: ephemeral-storage. Evicted</title><link>http://cugbtang.github.io/post/kubernetes/series-kubernetes-6/</link><pubDate>Fri, 15 Apr 2022 16:01:23 +0800</pubDate><guid>http://cugbtang.github.io/post/kubernetes/series-kubernetes-6/</guid><description>&lt;h2 id="the-node-was-low-on-resource-ephemeral-storage-evicted">The node was low on resource: ephemeral-storage. Evicted&lt;/h2>
&lt;p>最近某个节点频繁出现这个问题&lt;/p>
&lt;h2 id="问题分析">问题分析&lt;/h2>
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>查询到的解决方案&lt;/p>
&lt;p>不能让某个占用过多的资源，临时存储不允许一直占用，用超过Limit， kubernetes就会干掉这个Pod，当然也会迅速拉起一个&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> resources:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> requests:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ephemeral-storage: &lt;span class="s2">&amp;#34;100Mi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> limits:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ephemeral-storage: &lt;span class="s2">&amp;#34;4Gi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>我们的改进方案&lt;/p>
&lt;p>1、在 CICD 部署模板中添加请求和限制，包括包括cpu、mem、ephemeral-storage&lt;/p>
&lt;p>2、修改docker 容器日志的限制， 在 &lt;code>/etc/docker/daemon.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;log-driver&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;json-file&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;log-opts&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max-size&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;300m&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;max-file&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">max-size&lt;span class="o">=&lt;/span>300m，意味着一个容器日志大小上限是300M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">max-file&lt;span class="o">=&lt;/span>3，意味着一个容器有三个日志
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="引用">引用&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/59906810/the-node-was-low-on-resource-ephemeral-storage">https://stackoverflow.com/questions/59906810/the-node-was-low-on-resource-ephemeral-storage&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>